{"version":3,"file":"vendors-node_modules_tempusdominus-bootstrap-4_build_js_tempusdominus-bootstrap-4_js.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,MAAM;AACR;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0DAA0D,2CAA2C;AACrJ;AACA,4CAA4C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD;AAC/P;AACA,8DAA8D,sEAAsE,8DAA8D;AAClM;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB;AACnB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,iCAAiC;AACjC;AACA,QAAQ,IAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjuCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,IAAI;AACjF,mKAAmK;AACngCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChgEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC,CAAC,MAAM,EAAE,MAAM,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjkBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,gBAAgB;AAChB;AACA;AACA,cAAc;AACdgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+BAA+B;AACzD,mBAAmB,MAAM;AACzB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnsources":["webpack://pyams_content_themes/./node_modules/tempusdominus-bootstrap-4/build/js/tempusdominus-bootstrap-4.js"],"sourcesContent":["/*!@preserve\r\n * Tempus Dominus Bootstrap4 v5.39.0 (https://tempusdominus.github.io/bootstrap-4/)\r\n * Copyright 2016-2020 Jonathan Peterson and contributors\r\n * Licensed under MIT (https://github.com/tempusdominus/bootstrap-3/blob/master/LICENSE)\r\n */\r\n\r\nif (typeof jQuery === 'undefined') {\r\n  throw new Error('Tempus Dominus Bootstrap4\\'s requires jQuery. jQuery must be included before Tempus Dominus Bootstrap4\\'s JavaScript.');\r\n}\r\n\r\n+function ($) {\r\n  var version = $.fn.jquery.split(' ')[0].split('.');\r\n  if ((version[0] < 2 && version[1] < 9) || (version[0] === 1 && version[1] === 9 && version[2] < 1) || (version[0] >= 4)) {\r\n    throw new Error('Tempus Dominus Bootstrap4\\'s requires at least jQuery v3.0.0 but less than v4.0.0');\r\n  }\r\n}(jQuery);\r\n\r\n\r\nif (typeof moment === 'undefined') {\r\n  throw new Error('Tempus Dominus Bootstrap4\\'s requires moment.js. Moment.js must be included before Tempus Dominus Bootstrap4\\'s JavaScript.');\r\n}\r\n\r\nvar version = moment.version.split('.')\r\nif ((version[0] <= 2 && version[1] < 17) || (version[0] >= 3)) {\r\n  throw new Error('Tempus Dominus Bootstrap4\\'s requires at least moment.js v2.17.0 but less than v3.0.0');\r\n}\r\n\r\n+function () {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n// ReSharper disable once InconsistentNaming\r\nvar DateTimePicker = function ($, moment) {\r\n  function escapeRegExp(text) {\r\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n  }\r\n\r\n  function isValidDate(date) {\r\n    return Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date.getTime());\r\n  }\r\n\r\n  function isValidDateTimeStr(str) {\r\n    return isValidDate(new Date(str));\r\n  } // ReSharper disable InconsistentNaming\r\n\r\n\r\n  var trim = function trim(str) {\r\n    return str.replace(/(^\\s+)|(\\s+$)/g, '');\r\n  },\r\n      NAME = 'datetimepicker',\r\n      DATA_KEY = \"\" + NAME,\r\n      EVENT_KEY = \".\" + DATA_KEY,\r\n      DATA_API_KEY = '.data-api',\r\n      Selector = {\r\n    DATA_TOGGLE: \"[data-toggle=\\\"\" + DATA_KEY + \"\\\"]\"\r\n  },\r\n      ClassName = {\r\n    INPUT: NAME + \"-input\"\r\n  },\r\n      Event = {\r\n    CHANGE: \"change\" + EVENT_KEY,\r\n    BLUR: \"blur\" + EVENT_KEY,\r\n    KEYUP: \"keyup\" + EVENT_KEY,\r\n    KEYDOWN: \"keydown\" + EVENT_KEY,\r\n    FOCUS: \"focus\" + EVENT_KEY,\r\n    CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY,\r\n    //emitted\r\n    UPDATE: \"update\" + EVENT_KEY,\r\n    ERROR: \"error\" + EVENT_KEY,\r\n    HIDE: \"hide\" + EVENT_KEY,\r\n    SHOW: \"show\" + EVENT_KEY\r\n  },\r\n      DatePickerModes = [{\r\n    CLASS_NAME: 'days',\r\n    NAV_FUNCTION: 'M',\r\n    NAV_STEP: 1\r\n  }, {\r\n    CLASS_NAME: 'months',\r\n    NAV_FUNCTION: 'y',\r\n    NAV_STEP: 1\r\n  }, {\r\n    CLASS_NAME: 'years',\r\n    NAV_FUNCTION: 'y',\r\n    NAV_STEP: 10\r\n  }, {\r\n    CLASS_NAME: 'decades',\r\n    NAV_FUNCTION: 'y',\r\n    NAV_STEP: 100\r\n  }],\r\n      KeyMap = {\r\n    'up': 38,\r\n    38: 'up',\r\n    'down': 40,\r\n    40: 'down',\r\n    'left': 37,\r\n    37: 'left',\r\n    'right': 39,\r\n    39: 'right',\r\n    'tab': 9,\r\n    9: 'tab',\r\n    'escape': 27,\r\n    27: 'escape',\r\n    'enter': 13,\r\n    13: 'enter',\r\n    'pageUp': 33,\r\n    33: 'pageUp',\r\n    'pageDown': 34,\r\n    34: 'pageDown',\r\n    'shift': 16,\r\n    16: 'shift',\r\n    'control': 17,\r\n    17: 'control',\r\n    'space': 32,\r\n    32: 'space',\r\n    't': 84,\r\n    84: 't',\r\n    'delete': 46,\r\n    46: 'delete'\r\n  },\r\n      ViewModes = ['times', 'days', 'months', 'years', 'decades'],\r\n      keyState = {},\r\n      keyPressHandled = {},\r\n      optionsSortMap = {\r\n    timeZone: -39,\r\n    format: -38,\r\n    dayViewHeaderFormat: -37,\r\n    extraFormats: -36,\r\n    stepping: -35,\r\n    minDate: -34,\r\n    maxDate: -33,\r\n    useCurrent: -32,\r\n    collapse: -31,\r\n    locale: -30,\r\n    defaultDate: -29,\r\n    disabledDates: -28,\r\n    enabledDates: -27,\r\n    icons: -26,\r\n    tooltips: -25,\r\n    useStrict: -24,\r\n    sideBySide: -23,\r\n    daysOfWeekDisabled: -22,\r\n    calendarWeeks: -21,\r\n    viewMode: -20,\r\n    toolbarPlacement: -19,\r\n    buttons: -18,\r\n    widgetPositioning: -17,\r\n    widgetParent: -16,\r\n    ignoreReadonly: -15,\r\n    keepOpen: -14,\r\n    focusOnShow: -13,\r\n    inline: -12,\r\n    keepInvalid: -11,\r\n    keyBinds: -10,\r\n    debug: -9,\r\n    allowInputToggle: -8,\r\n    disabledTimeIntervals: -7,\r\n    disabledHours: -6,\r\n    enabledHours: -5,\r\n    viewDate: -4,\r\n    allowMultidate: -3,\r\n    multidateSeparator: -2,\r\n    updateOnlyThroughDateOption: -1,\r\n    date: 1\r\n  },\r\n      defaultFeatherIcons = {\r\n    time: 'clock',\r\n    date: 'calendar',\r\n    up: 'arrow-up',\r\n    down: 'arrow-down',\r\n    previous: 'arrow-left',\r\n    next: 'arrow-right',\r\n    today: 'arrow-down-circle',\r\n    clear: 'trash-2',\r\n    close: 'x'\r\n  };\r\n\r\n  function optionsSortFn(optionKeyA, optionKeyB) {\r\n    if (optionsSortMap[optionKeyA] && optionsSortMap[optionKeyB]) {\r\n      if (optionsSortMap[optionKeyA] < 0 && optionsSortMap[optionKeyB] < 0) {\r\n        return Math.abs(optionsSortMap[optionKeyB]) - Math.abs(optionsSortMap[optionKeyA]);\r\n      } else if (optionsSortMap[optionKeyA] < 0) {\r\n        return -1;\r\n      } else if (optionsSortMap[optionKeyB] < 0) {\r\n        return 1;\r\n      }\r\n\r\n      return optionsSortMap[optionKeyA] - optionsSortMap[optionKeyB];\r\n    } else if (optionsSortMap[optionKeyA]) {\r\n      return optionsSortMap[optionKeyA];\r\n    } else if (optionsSortMap[optionKeyB]) {\r\n      return optionsSortMap[optionKeyB];\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  var Default = {\r\n    timeZone: '',\r\n    format: false,\r\n    dayViewHeaderFormat: 'MMMM YYYY',\r\n    extraFormats: false,\r\n    stepping: 1,\r\n    minDate: false,\r\n    maxDate: false,\r\n    useCurrent: true,\r\n    collapse: true,\r\n    locale: moment.locale(),\r\n    defaultDate: false,\r\n    disabledDates: false,\r\n    enabledDates: false,\r\n    icons: {\r\n      type: 'class',\r\n      time: 'fa fa-clock-o',\r\n      date: 'fa fa-calendar',\r\n      up: 'fa fa-arrow-up',\r\n      down: 'fa fa-arrow-down',\r\n      previous: 'fa fa-chevron-left',\r\n      next: 'fa fa-chevron-right',\r\n      today: 'fa fa-calendar-check-o',\r\n      clear: 'fa fa-trash',\r\n      close: 'fa fa-times'\r\n    },\r\n    tooltips: {\r\n      today: 'Go to today',\r\n      clear: 'Clear selection',\r\n      close: 'Close the picker',\r\n      selectMonth: 'Select Month',\r\n      prevMonth: 'Previous Month',\r\n      nextMonth: 'Next Month',\r\n      selectYear: 'Select Year',\r\n      prevYear: 'Previous Year',\r\n      nextYear: 'Next Year',\r\n      selectDecade: 'Select Decade',\r\n      prevDecade: 'Previous Decade',\r\n      nextDecade: 'Next Decade',\r\n      prevCentury: 'Previous Century',\r\n      nextCentury: 'Next Century',\r\n      pickHour: 'Pick Hour',\r\n      incrementHour: 'Increment Hour',\r\n      decrementHour: 'Decrement Hour',\r\n      pickMinute: 'Pick Minute',\r\n      incrementMinute: 'Increment Minute',\r\n      decrementMinute: 'Decrement Minute',\r\n      pickSecond: 'Pick Second',\r\n      incrementSecond: 'Increment Second',\r\n      decrementSecond: 'Decrement Second',\r\n      togglePeriod: 'Toggle Period',\r\n      selectTime: 'Select Time',\r\n      selectDate: 'Select Date'\r\n    },\r\n    useStrict: false,\r\n    sideBySide: false,\r\n    daysOfWeekDisabled: false,\r\n    calendarWeeks: false,\r\n    viewMode: 'days',\r\n    toolbarPlacement: 'default',\r\n    buttons: {\r\n      showToday: false,\r\n      showClear: false,\r\n      showClose: false\r\n    },\r\n    widgetPositioning: {\r\n      horizontal: 'auto',\r\n      vertical: 'auto'\r\n    },\r\n    widgetParent: null,\r\n    readonly: false,\r\n    ignoreReadonly: false,\r\n    keepOpen: false,\r\n    focusOnShow: true,\r\n    inline: false,\r\n    keepInvalid: false,\r\n    keyBinds: {\r\n      up: function up() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().subtract(7, 'd'));\r\n        } else {\r\n          this.date(d.clone().add(this.stepping(), 'm'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      down: function down() {\r\n        if (!this.widget) {\r\n          this.show();\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().add(7, 'd'));\r\n        } else {\r\n          this.date(d.clone().subtract(this.stepping(), 'm'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      'control up': function controlUp() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().subtract(1, 'y'));\r\n        } else {\r\n          this.date(d.clone().add(1, 'h'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      'control down': function controlDown() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().add(1, 'y'));\r\n        } else {\r\n          this.date(d.clone().subtract(1, 'h'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      left: function left() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().subtract(1, 'd'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      right: function right() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().add(1, 'd'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      pageUp: function pageUp() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().subtract(1, 'M'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      pageDown: function pageDown() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        var d = this._dates[0] || this.getMoment();\r\n\r\n        if (this.widget.find('.datepicker').is(':visible')) {\r\n          this.date(d.clone().add(1, 'M'));\r\n        }\r\n\r\n        return true;\r\n      },\r\n      enter: function enter() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        this.hide();\r\n        return true;\r\n      },\r\n      escape: function escape() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        this.hide();\r\n        return true;\r\n      },\r\n      'control space': function controlSpace() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        if (this.widget.find('.timepicker').is(':visible')) {\r\n          this.widget.find('.btn[data-action=\"togglePeriod\"]').click();\r\n        }\r\n\r\n        return true;\r\n      },\r\n      t: function t() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        this.date(this.getMoment());\r\n        return true;\r\n      },\r\n      'delete': function _delete() {\r\n        if (!this.widget) {\r\n          return false;\r\n        }\r\n\r\n        this.clear();\r\n        return true;\r\n      }\r\n    },\r\n    debug: false,\r\n    allowInputToggle: false,\r\n    disabledTimeIntervals: false,\r\n    disabledHours: false,\r\n    enabledHours: false,\r\n    viewDate: false,\r\n    allowMultidate: false,\r\n    multidateSeparator: ', ',\r\n    updateOnlyThroughDateOption: false,\r\n    promptTimeOnDateChange: false,\r\n    promptTimeOnDateChangeTransitionDelay: 200\r\n  }; // ReSharper restore InconsistentNaming\r\n  // ReSharper disable once DeclarationHides\r\n  // ReSharper disable once InconsistentNaming\r\n\r\n  var DateTimePicker = /*#__PURE__*/function () {\r\n    /** @namespace eData.dateOptions */\r\n\r\n    /** @namespace moment.tz */\r\n    function DateTimePicker(element, options) {\r\n      this._options = this._getOptions(options);\r\n      this._element = element;\r\n      this._dates = [];\r\n      this._datesFormatted = [];\r\n      this._viewDate = null;\r\n      this.unset = true;\r\n      this.component = false;\r\n      this.widget = false;\r\n      this.use24Hours = null;\r\n      this.actualFormat = null;\r\n      this.parseFormats = null;\r\n      this.currentViewMode = null;\r\n      this.MinViewModeNumber = 0;\r\n      this.isInitFormatting = false;\r\n      this.isInit = false;\r\n      this.isDateUpdateThroughDateOptionFromClientCode = false;\r\n      this.hasInitDate = false;\r\n      this.initDate = void 0;\r\n      this._notifyChangeEventContext = void 0;\r\n      this._currentPromptTimeTimeout = null;\r\n\r\n      this._int();\r\n    }\r\n    /**\r\n     * @return {string}\r\n     */\r\n\r\n\r\n    var _proto = DateTimePicker.prototype;\r\n\r\n    //private\r\n    _proto._int = function _int() {\r\n      this.isInit = true;\r\n\r\n      var targetInput = this._element.data('target-input');\r\n\r\n      if (this._element.is('input')) {\r\n        this.input = this._element;\r\n      } else if (targetInput !== undefined) {\r\n        if (targetInput === 'nearest') {\r\n          this.input = this._element.find('input');\r\n        } else {\r\n          this.input = $(targetInput);\r\n        }\r\n      }\r\n\r\n      this._dates = [];\r\n      this._dates[0] = this.getMoment();\r\n      this._viewDate = this.getMoment().clone();\r\n      $.extend(true, this._options, this._dataToOptions());\r\n      this.hasInitDate = false;\r\n      this.initDate = void 0;\r\n      this.options(this._options);\r\n      this.isInitFormatting = true;\r\n\r\n      this._initFormatting();\r\n\r\n      this.isInitFormatting = false;\r\n\r\n      if (this.input !== undefined && this.input.is('input') && this.input.val().trim().length !== 0) {\r\n        this._setValue(this._parseInputDate(this.input.val().trim()), 0);\r\n      } else if (this._options.defaultDate && this.input !== undefined && this.input.attr('placeholder') === undefined) {\r\n        this._setValue(this._options.defaultDate, 0);\r\n      }\r\n\r\n      if (this.hasInitDate) {\r\n        this.date(this.initDate);\r\n      }\r\n\r\n      if (this._options.inline) {\r\n        this.show();\r\n      }\r\n\r\n      this.isInit = false;\r\n    };\r\n\r\n    _proto._update = function _update() {\r\n      if (!this.widget) {\r\n        return;\r\n      }\r\n\r\n      this._fillDate();\r\n\r\n      this._fillTime();\r\n    };\r\n\r\n    _proto._setValue = function _setValue(targetMoment, index) {\r\n      var noIndex = typeof index === 'undefined',\r\n          isClear = !targetMoment && noIndex,\r\n          isDateUpdateThroughDateOptionFromClientCode = this.isDateUpdateThroughDateOptionFromClientCode,\r\n          isNotAllowedProgrammaticUpdate = !this.isInit && this._options.updateOnlyThroughDateOption && !isDateUpdateThroughDateOptionFromClientCode;\r\n      var outpValue = '',\r\n          isInvalid = false,\r\n          oldDate = this.unset ? null : this._dates[index];\r\n\r\n      if (!oldDate && !this.unset && noIndex && isClear) {\r\n        oldDate = this._dates[this._dates.length - 1];\r\n      } // case of calling setValue(null or false)\r\n\r\n\r\n      if (!targetMoment) {\r\n        if (isNotAllowedProgrammaticUpdate) {\r\n          this._notifyEvent({\r\n            type: DateTimePicker.Event.CHANGE,\r\n            date: targetMoment,\r\n            oldDate: oldDate,\r\n            isClear: isClear,\r\n            isInvalid: isInvalid,\r\n            isDateUpdateThroughDateOptionFromClientCode: isDateUpdateThroughDateOptionFromClientCode,\r\n            isInit: this.isInit\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        if (!this._options.allowMultidate || this._dates.length === 1 || isClear) {\r\n          this.unset = true;\r\n          this._dates = [];\r\n          this._datesFormatted = [];\r\n        } else {\r\n          outpValue = \"\" + this._element.data('date') + this._options.multidateSeparator;\r\n          outpValue = oldDate && outpValue.replace(\"\" + oldDate.format(this.actualFormat) + this._options.multidateSeparator, '').replace(\"\" + this._options.multidateSeparator + this._options.multidateSeparator, '').replace(new RegExp(escapeRegExp(this._options.multidateSeparator) + \"\\\\s*$\"), '') || '';\r\n\r\n          this._dates.splice(index, 1);\r\n\r\n          this._datesFormatted.splice(index, 1);\r\n        }\r\n\r\n        outpValue = trim(outpValue);\r\n\r\n        if (this.input !== undefined) {\r\n          this.input.val(outpValue);\r\n          this.input.trigger('input');\r\n        }\r\n\r\n        this._element.data('date', outpValue);\r\n\r\n        this._notifyEvent({\r\n          type: DateTimePicker.Event.CHANGE,\r\n          date: false,\r\n          oldDate: oldDate,\r\n          isClear: isClear,\r\n          isInvalid: isInvalid,\r\n          isDateUpdateThroughDateOptionFromClientCode: isDateUpdateThroughDateOptionFromClientCode,\r\n          isInit: this.isInit\r\n        });\r\n\r\n        this._update();\r\n\r\n        return;\r\n      }\r\n\r\n      targetMoment = targetMoment.clone().locale(this._options.locale);\r\n\r\n      if (this._hasTimeZone()) {\r\n        targetMoment.tz(this._options.timeZone);\r\n      }\r\n\r\n      if (this._options.stepping !== 1) {\r\n        targetMoment.minutes(Math.round(targetMoment.minutes() / this._options.stepping) * this._options.stepping).seconds(0);\r\n      }\r\n\r\n      if (this._isValid(targetMoment)) {\r\n        if (isNotAllowedProgrammaticUpdate) {\r\n          this._notifyEvent({\r\n            type: DateTimePicker.Event.CHANGE,\r\n            date: targetMoment.clone(),\r\n            oldDate: oldDate,\r\n            isClear: isClear,\r\n            isInvalid: isInvalid,\r\n            isDateUpdateThroughDateOptionFromClientCode: isDateUpdateThroughDateOptionFromClientCode,\r\n            isInit: this.isInit\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        this._dates[index] = targetMoment;\r\n        this._datesFormatted[index] = targetMoment.format('YYYY-MM-DD');\r\n        this._viewDate = targetMoment.clone();\r\n\r\n        if (this._options.allowMultidate && this._dates.length > 1) {\r\n          for (var i = 0; i < this._dates.length; i++) {\r\n            outpValue += \"\" + this._dates[i].format(this.actualFormat) + this._options.multidateSeparator;\r\n          }\r\n\r\n          outpValue = outpValue.replace(new RegExp(this._options.multidateSeparator + \"\\\\s*$\"), '');\r\n        } else {\r\n          outpValue = this._dates[index].format(this.actualFormat);\r\n        }\r\n\r\n        outpValue = trim(outpValue);\r\n\r\n        if (this.input !== undefined) {\r\n          this.input.val(outpValue);\r\n          this.input.trigger('input');\r\n        }\r\n\r\n        this._element.data('date', outpValue);\r\n\r\n        this.unset = false;\r\n\r\n        this._update();\r\n\r\n        this._notifyEvent({\r\n          type: DateTimePicker.Event.CHANGE,\r\n          date: this._dates[index].clone(),\r\n          oldDate: oldDate,\r\n          isClear: isClear,\r\n          isInvalid: isInvalid,\r\n          isDateUpdateThroughDateOptionFromClientCode: isDateUpdateThroughDateOptionFromClientCode,\r\n          isInit: this.isInit\r\n        });\r\n      } else {\r\n        isInvalid = true;\r\n\r\n        if (!this._options.keepInvalid) {\r\n          if (this.input !== undefined) {\r\n            this.input.val(\"\" + (this.unset ? '' : this._dates[index].format(this.actualFormat)));\r\n            this.input.trigger('input');\r\n          }\r\n        } else {\r\n          this._notifyEvent({\r\n            type: DateTimePicker.Event.CHANGE,\r\n            date: targetMoment,\r\n            oldDate: oldDate,\r\n            isClear: isClear,\r\n            isInvalid: isInvalid,\r\n            isDateUpdateThroughDateOptionFromClientCode: isDateUpdateThroughDateOptionFromClientCode,\r\n            isInit: this.isInit\r\n          });\r\n        }\r\n\r\n        this._notifyEvent({\r\n          type: DateTimePicker.Event.ERROR,\r\n          date: targetMoment,\r\n          oldDate: oldDate\r\n        });\r\n      }\r\n    };\r\n\r\n    _proto._change = function _change(e) {\r\n      var val = $(e.target).val().trim(),\r\n          parsedDate = val ? this._parseInputDate(val) : null;\r\n\r\n      this._setValue(parsedDate, 0);\r\n\r\n      e.stopImmediatePropagation();\r\n      return false;\r\n    } //noinspection JSMethodCanBeStatic\r\n    ;\r\n\r\n    _proto._getOptions = function _getOptions(options) {\r\n      options = $.extend(true, {}, Default, options && options.icons && options.icons.type === 'feather' ? {\r\n        icons: defaultFeatherIcons\r\n      } : {}, options);\r\n      return options;\r\n    };\r\n\r\n    _proto._hasTimeZone = function _hasTimeZone() {\r\n      return moment.tz !== undefined && this._options.timeZone !== undefined && this._options.timeZone !== null && this._options.timeZone !== '';\r\n    };\r\n\r\n    _proto._isEnabled = function _isEnabled(granularity) {\r\n      if (typeof granularity !== 'string' || granularity.length > 1) {\r\n        throw new TypeError('isEnabled expects a single character string parameter');\r\n      }\r\n\r\n      switch (granularity) {\r\n        case 'y':\r\n          return this.actualFormat.indexOf('Y') !== -1;\r\n\r\n        case 'M':\r\n          return this.actualFormat.indexOf('M') !== -1;\r\n\r\n        case 'd':\r\n          return this.actualFormat.toLowerCase().indexOf('d') !== -1;\r\n\r\n        case 'h':\r\n        case 'H':\r\n          return this.actualFormat.toLowerCase().indexOf('h') !== -1;\r\n\r\n        case 'm':\r\n          return this.actualFormat.indexOf('m') !== -1;\r\n\r\n        case 's':\r\n          return this.actualFormat.indexOf('s') !== -1;\r\n\r\n        case 'a':\r\n        case 'A':\r\n          return this.actualFormat.toLowerCase().indexOf('a') !== -1;\r\n\r\n        default:\r\n          return false;\r\n      }\r\n    };\r\n\r\n    _proto._hasTime = function _hasTime() {\r\n      return this._isEnabled('h') || this._isEnabled('m') || this._isEnabled('s');\r\n    };\r\n\r\n    _proto._hasDate = function _hasDate() {\r\n      return this._isEnabled('y') || this._isEnabled('M') || this._isEnabled('d');\r\n    };\r\n\r\n    _proto._dataToOptions = function _dataToOptions() {\r\n      var eData = this._element.data();\r\n\r\n      var dataOptions = {};\r\n\r\n      if (eData.dateOptions && eData.dateOptions instanceof Object) {\r\n        dataOptions = $.extend(true, dataOptions, eData.dateOptions);\r\n      }\r\n\r\n      $.each(this._options, function (key) {\r\n        var attributeName = \"date\" + key.charAt(0).toUpperCase() + key.slice(1); //todo data api key\r\n\r\n        if (eData[attributeName] !== undefined) {\r\n          dataOptions[key] = eData[attributeName];\r\n        } else {\r\n          delete dataOptions[key];\r\n        }\r\n      });\r\n      return dataOptions;\r\n    };\r\n\r\n    _proto._format = function _format() {\r\n      return this._options.format || 'YYYY-MM-DD HH:mm';\r\n    };\r\n\r\n    _proto._areSameDates = function _areSameDates(a, b) {\r\n      var format = this._format();\r\n\r\n      return a && b && (a.isSame(b) || moment(a.format(format), format).isSame(moment(b.format(format), format)));\r\n    };\r\n\r\n    _proto._notifyEvent = function _notifyEvent(e) {\r\n      if (e.type === DateTimePicker.Event.CHANGE) {\r\n        this._notifyChangeEventContext = this._notifyChangeEventContext || 0;\r\n        this._notifyChangeEventContext++;\r\n\r\n        if (e.date && this._areSameDates(e.date, e.oldDate) || !e.isClear && !e.date && !e.oldDate || this._notifyChangeEventContext > 1) {\r\n          this._notifyChangeEventContext = void 0;\r\n          return;\r\n        }\r\n\r\n        this._handlePromptTimeIfNeeded(e);\r\n      }\r\n\r\n      this._element.trigger(e);\r\n\r\n      this._notifyChangeEventContext = void 0;\r\n    };\r\n\r\n    _proto._handlePromptTimeIfNeeded = function _handlePromptTimeIfNeeded(e) {\r\n      if (this._options.promptTimeOnDateChange) {\r\n        if (!e.oldDate && this._options.useCurrent) {\r\n          // First time ever. If useCurrent option is set to true (default), do nothing\r\n          // because the first date is selected automatically.\r\n          return;\r\n        } else if (e.oldDate && e.date && (e.oldDate.format('YYYY-MM-DD') === e.date.format('YYYY-MM-DD') || e.oldDate.format('YYYY-MM-DD') !== e.date.format('YYYY-MM-DD') && e.oldDate.format('HH:mm:ss') !== e.date.format('HH:mm:ss'))) {\r\n          // Date didn't change (time did) or date changed because time did.\r\n          return;\r\n        }\r\n\r\n        var that = this;\r\n        clearTimeout(this._currentPromptTimeTimeout);\r\n        this._currentPromptTimeTimeout = setTimeout(function () {\r\n          if (that.widget) {\r\n            that.widget.find('[data-action=\"togglePicker\"]').click();\r\n          }\r\n        }, this._options.promptTimeOnDateChangeTransitionDelay);\r\n      }\r\n    };\r\n\r\n    _proto._viewUpdate = function _viewUpdate(e) {\r\n      if (e === 'y') {\r\n        e = 'YYYY';\r\n      }\r\n\r\n      this._notifyEvent({\r\n        type: DateTimePicker.Event.UPDATE,\r\n        change: e,\r\n        viewDate: this._viewDate.clone()\r\n      });\r\n    };\r\n\r\n    _proto._showMode = function _showMode(dir) {\r\n      if (!this.widget) {\r\n        return;\r\n      }\r\n\r\n      if (dir) {\r\n        this.currentViewMode = Math.max(this.MinViewModeNumber, Math.min(3, this.currentViewMode + dir));\r\n      }\r\n\r\n      this.widget.find('.datepicker > div').hide().filter(\".datepicker-\" + DatePickerModes[this.currentViewMode].CLASS_NAME).show();\r\n    };\r\n\r\n    _proto._isInDisabledDates = function _isInDisabledDates(testDate) {\r\n      return this._options.disabledDates[testDate.format('YYYY-MM-DD')] === true;\r\n    };\r\n\r\n    _proto._isInEnabledDates = function _isInEnabledDates(testDate) {\r\n      return this._options.enabledDates[testDate.format('YYYY-MM-DD')] === true;\r\n    };\r\n\r\n    _proto._isInDisabledHours = function _isInDisabledHours(testDate) {\r\n      return this._options.disabledHours[testDate.format('H')] === true;\r\n    };\r\n\r\n    _proto._isInEnabledHours = function _isInEnabledHours(testDate) {\r\n      return this._options.enabledHours[testDate.format('H')] === true;\r\n    };\r\n\r\n    _proto._isValid = function _isValid(targetMoment, granularity) {\r\n      if (!targetMoment || !targetMoment.isValid()) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.disabledDates && granularity === 'd' && this._isInDisabledDates(targetMoment)) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.enabledDates && granularity === 'd' && !this._isInEnabledDates(targetMoment)) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.minDate && targetMoment.isBefore(this._options.minDate, granularity)) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.maxDate && targetMoment.isAfter(this._options.maxDate, granularity)) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.daysOfWeekDisabled && granularity === 'd' && this._options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && this._isInDisabledHours(targetMoment)) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !this._isInEnabledHours(targetMoment)) {\r\n        return false;\r\n      }\r\n\r\n      if (this._options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {\r\n        var found = false;\r\n        $.each(this._options.disabledTimeIntervals, function () {\r\n          if (targetMoment.isBetween(this[0], this[1])) {\r\n            found = true;\r\n            return false;\r\n          }\r\n        });\r\n\r\n        if (found) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    _proto._parseInputDate = function _parseInputDate(inputDate, _temp) {\r\n      var _ref = _temp === void 0 ? {} : _temp,\r\n          _ref$isPickerShow = _ref.isPickerShow,\r\n          isPickerShow = _ref$isPickerShow === void 0 ? false : _ref$isPickerShow;\r\n\r\n      if (this._options.parseInputDate === undefined || isPickerShow) {\r\n        if (!moment.isMoment(inputDate)) {\r\n          inputDate = this.getMoment(inputDate);\r\n        }\r\n      } else {\r\n        inputDate = this._options.parseInputDate(inputDate);\r\n      } //inputDate.locale(this.options.locale);\r\n\r\n\r\n      return inputDate;\r\n    };\r\n\r\n    _proto._keydown = function _keydown(e) {\r\n      var handler = null,\r\n          index,\r\n          index2,\r\n          keyBindKeys,\r\n          allModifiersPressed;\r\n      var pressedKeys = [],\r\n          pressedModifiers = {},\r\n          currentKey = e.which,\r\n          pressed = 'p';\r\n      keyState[currentKey] = pressed;\r\n\r\n      for (index in keyState) {\r\n        if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {\r\n          pressedKeys.push(index);\r\n\r\n          if (parseInt(index, 10) !== currentKey) {\r\n            pressedModifiers[index] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (index in this._options.keyBinds) {\r\n        if (this._options.keyBinds.hasOwnProperty(index) && typeof this._options.keyBinds[index] === 'function') {\r\n          keyBindKeys = index.split(' ');\r\n\r\n          if (keyBindKeys.length === pressedKeys.length && KeyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {\r\n            allModifiersPressed = true;\r\n\r\n            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {\r\n              if (!(KeyMap[keyBindKeys[index2]] in pressedModifiers)) {\r\n                allModifiersPressed = false;\r\n                break;\r\n              }\r\n            }\r\n\r\n            if (allModifiersPressed) {\r\n              handler = this._options.keyBinds[index];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (handler) {\r\n        if (handler.call(this)) {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    } //noinspection JSMethodCanBeStatic,SpellCheckingInspection\r\n    ;\r\n\r\n    _proto._keyup = function _keyup(e) {\r\n      keyState[e.which] = 'r';\r\n\r\n      if (keyPressHandled[e.which]) {\r\n        keyPressHandled[e.which] = false;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    _proto._indexGivenDates = function _indexGivenDates(givenDatesArray) {\r\n      // Store given enabledDates and disabledDates as keys.\r\n      // This way we can check their existence in O(1) time instead of looping through whole array.\r\n      // (for example: options.enabledDates['2014-02-27'] === true)\r\n      var givenDatesIndexed = {},\r\n          self = this;\r\n      $.each(givenDatesArray, function () {\r\n        var dDate = self._parseInputDate(this);\r\n\r\n        if (dDate.isValid()) {\r\n          givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\r\n        }\r\n      });\r\n      return Object.keys(givenDatesIndexed).length ? givenDatesIndexed : false;\r\n    };\r\n\r\n    _proto._indexGivenHours = function _indexGivenHours(givenHoursArray) {\r\n      // Store given enabledHours and disabledHours as keys.\r\n      // This way we can check their existence in O(1) time instead of looping through whole array.\r\n      // (for example: options.enabledHours['2014-02-27'] === true)\r\n      var givenHoursIndexed = {};\r\n      $.each(givenHoursArray, function () {\r\n        givenHoursIndexed[this] = true;\r\n      });\r\n      return Object.keys(givenHoursIndexed).length ? givenHoursIndexed : false;\r\n    };\r\n\r\n    _proto._initFormatting = function _initFormatting() {\r\n      var format = this._options.format || 'L LT',\r\n          self = this;\r\n      this.actualFormat = format.replace(/(\\[[^\\[]*])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {\r\n        return (self.isInitFormatting && self._options.date === null ? self.getMoment() : self._dates[0]).localeData().longDateFormat(formatInput) || formatInput; //todo taking the first date should be ok\r\n      });\r\n      this.parseFormats = this._options.extraFormats ? this._options.extraFormats.slice() : [];\r\n\r\n      if (this.parseFormats.indexOf(format) < 0 && this.parseFormats.indexOf(this.actualFormat) < 0) {\r\n        this.parseFormats.push(this.actualFormat);\r\n      }\r\n\r\n      this.use24Hours = this.actualFormat.toLowerCase().indexOf('a') < 1 && this.actualFormat.replace(/\\[.*?]/g, '').indexOf('h') < 1;\r\n\r\n      if (this._isEnabled('y')) {\r\n        this.MinViewModeNumber = 2;\r\n      }\r\n\r\n      if (this._isEnabled('M')) {\r\n        this.MinViewModeNumber = 1;\r\n      }\r\n\r\n      if (this._isEnabled('d')) {\r\n        this.MinViewModeNumber = 0;\r\n      }\r\n\r\n      this.currentViewMode = Math.max(this.MinViewModeNumber, this.currentViewMode);\r\n\r\n      if (!this.unset) {\r\n        this._setValue(this._dates[0], 0);\r\n      }\r\n    };\r\n\r\n    _proto._getLastPickedDate = function _getLastPickedDate() {\r\n      var lastPickedDate = this._dates[this._getLastPickedDateIndex()];\r\n\r\n      if (!lastPickedDate && this._options.allowMultidate) {\r\n        lastPickedDate = moment(new Date());\r\n      }\r\n\r\n      return lastPickedDate;\r\n    };\r\n\r\n    _proto._getLastPickedDateIndex = function _getLastPickedDateIndex() {\r\n      return this._dates.length - 1;\r\n    } //public\r\n    ;\r\n\r\n    _proto.getMoment = function getMoment(d) {\r\n      var returnMoment;\r\n\r\n      if (d === undefined || d === null) {\r\n        // TODO: Should this use format?\r\n        returnMoment = moment().clone().locale(this._options.locale);\r\n      } else if (this._hasTimeZone()) {\r\n        // There is a string to parse and a default time zone\r\n        // parse with the tz function which takes a default time zone if it is not in the format string\r\n        returnMoment = moment.tz(d, this.parseFormats, this._options.locale, this._options.useStrict, this._options.timeZone);\r\n      } else {\r\n        returnMoment = moment(d, this.parseFormats, this._options.locale, this._options.useStrict);\r\n      }\r\n\r\n      if (this._hasTimeZone()) {\r\n        returnMoment.tz(this._options.timeZone);\r\n      }\r\n\r\n      return returnMoment;\r\n    };\r\n\r\n    _proto.toggle = function toggle() {\r\n      return this.widget ? this.hide() : this.show();\r\n    };\r\n\r\n    _proto.readonly = function readonly(_readonly) {\r\n      if (arguments.length === 0) {\r\n        return this._options.readonly;\r\n      }\r\n\r\n      if (typeof _readonly !== 'boolean') {\r\n        throw new TypeError('readonly() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.readonly = _readonly;\r\n\r\n      if (this.input !== undefined) {\r\n        this.input.prop('readonly', this._options.readonly);\r\n      }\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto.ignoreReadonly = function ignoreReadonly(_ignoreReadonly) {\r\n      if (arguments.length === 0) {\r\n        return this._options.ignoreReadonly;\r\n      }\r\n\r\n      if (typeof _ignoreReadonly !== 'boolean') {\r\n        throw new TypeError('ignoreReadonly() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.ignoreReadonly = _ignoreReadonly;\r\n    };\r\n\r\n    _proto.options = function options(newOptions) {\r\n      if (arguments.length === 0) {\r\n        return $.extend(true, {}, this._options);\r\n      }\r\n\r\n      if (!(newOptions instanceof Object)) {\r\n        throw new TypeError('options() this.options parameter should be an object');\r\n      }\r\n\r\n      $.extend(true, this._options, newOptions);\r\n      var self = this,\r\n          optionsKeys = Object.keys(this._options).sort(optionsSortFn);\r\n      $.each(optionsKeys, function (i, key) {\r\n        var value = self._options[key];\r\n\r\n        if (self[key] !== undefined) {\r\n          if (self.isInit && key === 'date') {\r\n            self.hasInitDate = true;\r\n            self.initDate = value;\r\n            return;\r\n          }\r\n\r\n          self[key](value);\r\n        }\r\n      });\r\n    };\r\n\r\n    _proto.date = function date(newDate, index) {\r\n      index = index || 0;\r\n\r\n      if (arguments.length === 0) {\r\n        if (this.unset) {\r\n          return null;\r\n        }\r\n\r\n        if (this._options.allowMultidate) {\r\n          return this._dates.join(this._options.multidateSeparator);\r\n        } else {\r\n          return this._dates[index].clone();\r\n        }\r\n      }\r\n\r\n      if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\r\n        throw new TypeError('date() parameter must be one of [null, string, moment or Date]');\r\n      }\r\n\r\n      if (typeof newDate === 'string' && isValidDateTimeStr(newDate)) {\r\n        newDate = new Date(newDate);\r\n      }\r\n\r\n      this._setValue(newDate === null ? null : this._parseInputDate(newDate), index);\r\n    };\r\n\r\n    _proto.updateOnlyThroughDateOption = function updateOnlyThroughDateOption(_updateOnlyThroughDateOption) {\r\n      if (typeof _updateOnlyThroughDateOption !== 'boolean') {\r\n        throw new TypeError('updateOnlyThroughDateOption() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.updateOnlyThroughDateOption = _updateOnlyThroughDateOption;\r\n    };\r\n\r\n    _proto.format = function format(newFormat) {\r\n      if (arguments.length === 0) {\r\n        return this._options.format;\r\n      }\r\n\r\n      if (typeof newFormat !== 'string' && (typeof newFormat !== 'boolean' || newFormat !== false)) {\r\n        throw new TypeError(\"format() expects a string or boolean:false parameter \" + newFormat);\r\n      }\r\n\r\n      this._options.format = newFormat;\r\n\r\n      if (this.actualFormat) {\r\n        this._initFormatting(); // reinitialize formatting\r\n\r\n      }\r\n    };\r\n\r\n    _proto.timeZone = function timeZone(newZone) {\r\n      if (arguments.length === 0) {\r\n        return this._options.timeZone;\r\n      }\r\n\r\n      if (typeof newZone !== 'string') {\r\n        throw new TypeError('newZone() expects a string parameter');\r\n      }\r\n\r\n      this._options.timeZone = newZone;\r\n    };\r\n\r\n    _proto.dayViewHeaderFormat = function dayViewHeaderFormat(newFormat) {\r\n      if (arguments.length === 0) {\r\n        return this._options.dayViewHeaderFormat;\r\n      }\r\n\r\n      if (typeof newFormat !== 'string') {\r\n        throw new TypeError('dayViewHeaderFormat() expects a string parameter');\r\n      }\r\n\r\n      this._options.dayViewHeaderFormat = newFormat;\r\n    };\r\n\r\n    _proto.extraFormats = function extraFormats(formats) {\r\n      if (arguments.length === 0) {\r\n        return this._options.extraFormats;\r\n      }\r\n\r\n      if (formats !== false && !(formats instanceof Array)) {\r\n        throw new TypeError('extraFormats() expects an array or false parameter');\r\n      }\r\n\r\n      this._options.extraFormats = formats;\r\n\r\n      if (this.parseFormats) {\r\n        this._initFormatting(); // reinit formatting\r\n\r\n      }\r\n    };\r\n\r\n    _proto.disabledDates = function disabledDates(dates) {\r\n      if (arguments.length === 0) {\r\n        return this._options.disabledDates ? $.extend({}, this._options.disabledDates) : this._options.disabledDates;\r\n      }\r\n\r\n      if (!dates) {\r\n        this._options.disabledDates = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (!(dates instanceof Array)) {\r\n        throw new TypeError('disabledDates() expects an array parameter');\r\n      }\r\n\r\n      this._options.disabledDates = this._indexGivenDates(dates);\r\n      this._options.enabledDates = false;\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.enabledDates = function enabledDates(dates) {\r\n      if (arguments.length === 0) {\r\n        return this._options.enabledDates ? $.extend({}, this._options.enabledDates) : this._options.enabledDates;\r\n      }\r\n\r\n      if (!dates) {\r\n        this._options.enabledDates = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (!(dates instanceof Array)) {\r\n        throw new TypeError('enabledDates() expects an array parameter');\r\n      }\r\n\r\n      this._options.enabledDates = this._indexGivenDates(dates);\r\n      this._options.disabledDates = false;\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.daysOfWeekDisabled = function daysOfWeekDisabled(_daysOfWeekDisabled) {\r\n      if (arguments.length === 0) {\r\n        return this._options.daysOfWeekDisabled.splice(0);\r\n      }\r\n\r\n      if (typeof _daysOfWeekDisabled === 'boolean' && !_daysOfWeekDisabled) {\r\n        this._options.daysOfWeekDisabled = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (!(_daysOfWeekDisabled instanceof Array)) {\r\n        throw new TypeError('daysOfWeekDisabled() expects an array parameter');\r\n      }\r\n\r\n      this._options.daysOfWeekDisabled = _daysOfWeekDisabled.reduce(function (previousValue, currentValue) {\r\n        currentValue = parseInt(currentValue, 10);\r\n\r\n        if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {\r\n          return previousValue;\r\n        }\r\n\r\n        if (previousValue.indexOf(currentValue) === -1) {\r\n          previousValue.push(currentValue);\r\n        }\r\n\r\n        return previousValue;\r\n      }, []).sort();\r\n\r\n      if (this._options.useCurrent && !this._options.keepInvalid) {\r\n        for (var i = 0; i < this._dates.length; i++) {\r\n          var tries = 0;\r\n\r\n          while (!this._isValid(this._dates[i], 'd')) {\r\n            this._dates[i].add(1, 'd');\r\n\r\n            if (tries === 31) {\r\n              throw 'Tried 31 times to find a valid date';\r\n            }\r\n\r\n            tries++;\r\n          }\r\n\r\n          this._setValue(this._dates[i], i);\r\n        }\r\n      }\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.maxDate = function maxDate(_maxDate) {\r\n      if (arguments.length === 0) {\r\n        return this._options.maxDate ? this._options.maxDate.clone() : this._options.maxDate;\r\n      }\r\n\r\n      if (typeof _maxDate === 'boolean' && _maxDate === false) {\r\n        this._options.maxDate = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (typeof _maxDate === 'string') {\r\n        if (_maxDate === 'now' || _maxDate === 'moment') {\r\n          _maxDate = this.getMoment();\r\n        }\r\n      }\r\n\r\n      var parsedDate = this._parseInputDate(_maxDate);\r\n\r\n      if (!parsedDate.isValid()) {\r\n        throw new TypeError(\"maxDate() Could not parse date parameter: \" + _maxDate);\r\n      }\r\n\r\n      if (this._options.minDate && parsedDate.isBefore(this._options.minDate)) {\r\n        throw new TypeError(\"maxDate() date parameter is before this.options.minDate: \" + parsedDate.format(this.actualFormat));\r\n      }\r\n\r\n      this._options.maxDate = parsedDate;\r\n\r\n      for (var i = 0; i < this._dates.length; i++) {\r\n        if (this._options.useCurrent && !this._options.keepInvalid && this._dates[i].isAfter(_maxDate)) {\r\n          this._setValue(this._options.maxDate, i);\r\n        }\r\n      }\r\n\r\n      if (this._viewDate.isAfter(parsedDate)) {\r\n        this._viewDate = parsedDate.clone().subtract(this._options.stepping, 'm');\r\n      }\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.minDate = function minDate(_minDate) {\r\n      if (arguments.length === 0) {\r\n        return this._options.minDate ? this._options.minDate.clone() : this._options.minDate;\r\n      }\r\n\r\n      if (typeof _minDate === 'boolean' && _minDate === false) {\r\n        this._options.minDate = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (typeof _minDate === 'string') {\r\n        if (_minDate === 'now' || _minDate === 'moment') {\r\n          _minDate = this.getMoment();\r\n        }\r\n      }\r\n\r\n      var parsedDate = this._parseInputDate(_minDate);\r\n\r\n      if (!parsedDate.isValid()) {\r\n        throw new TypeError(\"minDate() Could not parse date parameter: \" + _minDate);\r\n      }\r\n\r\n      if (this._options.maxDate && parsedDate.isAfter(this._options.maxDate)) {\r\n        throw new TypeError(\"minDate() date parameter is after this.options.maxDate: \" + parsedDate.format(this.actualFormat));\r\n      }\r\n\r\n      this._options.minDate = parsedDate;\r\n\r\n      for (var i = 0; i < this._dates.length; i++) {\r\n        if (this._options.useCurrent && !this._options.keepInvalid && this._dates[i].isBefore(_minDate)) {\r\n          this._setValue(this._options.minDate, i);\r\n        }\r\n      }\r\n\r\n      if (this._viewDate.isBefore(parsedDate)) {\r\n        this._viewDate = parsedDate.clone().add(this._options.stepping, 'm');\r\n      }\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.defaultDate = function defaultDate(_defaultDate) {\r\n      if (arguments.length === 0) {\r\n        return this._options.defaultDate ? this._options.defaultDate.clone() : this._options.defaultDate;\r\n      }\r\n\r\n      if (!_defaultDate) {\r\n        this._options.defaultDate = false;\r\n        return true;\r\n      }\r\n\r\n      if (typeof _defaultDate === 'string') {\r\n        if (_defaultDate === 'now' || _defaultDate === 'moment') {\r\n          _defaultDate = this.getMoment();\r\n        } else {\r\n          _defaultDate = this.getMoment(_defaultDate);\r\n        }\r\n      }\r\n\r\n      var parsedDate = this._parseInputDate(_defaultDate);\r\n\r\n      if (!parsedDate.isValid()) {\r\n        throw new TypeError(\"defaultDate() Could not parse date parameter: \" + _defaultDate);\r\n      }\r\n\r\n      if (!this._isValid(parsedDate)) {\r\n        throw new TypeError('defaultDate() date passed is invalid according to component setup validations');\r\n      }\r\n\r\n      this._options.defaultDate = parsedDate;\r\n\r\n      if (this._options.defaultDate && this._options.inline || this.input !== undefined && this.input.val().trim() === '') {\r\n        this._setValue(this._options.defaultDate, 0);\r\n      }\r\n    };\r\n\r\n    _proto.locale = function locale(_locale) {\r\n      if (arguments.length === 0) {\r\n        return this._options.locale;\r\n      }\r\n\r\n      if (!moment.localeData(_locale)) {\r\n        throw new TypeError(\"locale() locale \" + _locale + \" is not loaded from moment locales!\");\r\n      }\r\n\r\n      this._options.locale = _locale;\r\n\r\n      for (var i = 0; i < this._dates.length; i++) {\r\n        this._dates[i].locale(this._options.locale);\r\n      }\r\n\r\n      this._viewDate.locale(this._options.locale);\r\n\r\n      if (this.actualFormat) {\r\n        this._initFormatting(); // reinitialize formatting\r\n\r\n      }\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto.stepping = function stepping(_stepping) {\r\n      if (arguments.length === 0) {\r\n        return this._options.stepping;\r\n      }\r\n\r\n      _stepping = parseInt(_stepping, 10);\r\n\r\n      if (isNaN(_stepping) || _stepping < 1) {\r\n        _stepping = 1;\r\n      }\r\n\r\n      this._options.stepping = _stepping;\r\n    };\r\n\r\n    _proto.useCurrent = function useCurrent(_useCurrent) {\r\n      var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];\r\n\r\n      if (arguments.length === 0) {\r\n        return this._options.useCurrent;\r\n      }\r\n\r\n      if (typeof _useCurrent !== 'boolean' && typeof _useCurrent !== 'string') {\r\n        throw new TypeError('useCurrent() expects a boolean or string parameter');\r\n      }\r\n\r\n      if (typeof _useCurrent === 'string' && useCurrentOptions.indexOf(_useCurrent.toLowerCase()) === -1) {\r\n        throw new TypeError(\"useCurrent() expects a string parameter of \" + useCurrentOptions.join(', '));\r\n      }\r\n\r\n      this._options.useCurrent = _useCurrent;\r\n    };\r\n\r\n    _proto.collapse = function collapse(_collapse) {\r\n      if (arguments.length === 0) {\r\n        return this._options.collapse;\r\n      }\r\n\r\n      if (typeof _collapse !== 'boolean') {\r\n        throw new TypeError('collapse() expects a boolean parameter');\r\n      }\r\n\r\n      if (this._options.collapse === _collapse) {\r\n        return true;\r\n      }\r\n\r\n      this._options.collapse = _collapse;\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto.icons = function icons(_icons) {\r\n      if (arguments.length === 0) {\r\n        return $.extend({}, this._options.icons);\r\n      }\r\n\r\n      if (!(_icons instanceof Object)) {\r\n        throw new TypeError('icons() expects parameter to be an Object');\r\n      }\r\n\r\n      $.extend(this._options.icons, _icons);\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto.tooltips = function tooltips(_tooltips) {\r\n      if (arguments.length === 0) {\r\n        return $.extend({}, this._options.tooltips);\r\n      }\r\n\r\n      if (!(_tooltips instanceof Object)) {\r\n        throw new TypeError('tooltips() expects parameter to be an Object');\r\n      }\r\n\r\n      $.extend(this._options.tooltips, _tooltips);\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto.useStrict = function useStrict(_useStrict) {\r\n      if (arguments.length === 0) {\r\n        return this._options.useStrict;\r\n      }\r\n\r\n      if (typeof _useStrict !== 'boolean') {\r\n        throw new TypeError('useStrict() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.useStrict = _useStrict;\r\n    };\r\n\r\n    _proto.sideBySide = function sideBySide(_sideBySide) {\r\n      if (arguments.length === 0) {\r\n        return this._options.sideBySide;\r\n      }\r\n\r\n      if (typeof _sideBySide !== 'boolean') {\r\n        throw new TypeError('sideBySide() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.sideBySide = _sideBySide;\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto.viewMode = function viewMode(_viewMode) {\r\n      if (arguments.length === 0) {\r\n        return this._options.viewMode;\r\n      }\r\n\r\n      if (typeof _viewMode !== 'string') {\r\n        throw new TypeError('viewMode() expects a string parameter');\r\n      }\r\n\r\n      if (DateTimePicker.ViewModes.indexOf(_viewMode) === -1) {\r\n        throw new TypeError(\"viewMode() parameter must be one of (\" + DateTimePicker.ViewModes.join(', ') + \") value\");\r\n      }\r\n\r\n      this._options.viewMode = _viewMode;\r\n      this.currentViewMode = Math.max(DateTimePicker.ViewModes.indexOf(_viewMode) - 1, this.MinViewModeNumber);\r\n\r\n      this._showMode();\r\n    };\r\n\r\n    _proto.calendarWeeks = function calendarWeeks(_calendarWeeks) {\r\n      if (arguments.length === 0) {\r\n        return this._options.calendarWeeks;\r\n      }\r\n\r\n      if (typeof _calendarWeeks !== 'boolean') {\r\n        throw new TypeError('calendarWeeks() expects parameter to be a boolean value');\r\n      }\r\n\r\n      this._options.calendarWeeks = _calendarWeeks;\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.buttons = function buttons(_buttons) {\r\n      if (arguments.length === 0) {\r\n        return $.extend({}, this._options.buttons);\r\n      }\r\n\r\n      if (!(_buttons instanceof Object)) {\r\n        throw new TypeError('buttons() expects parameter to be an Object');\r\n      }\r\n\r\n      $.extend(this._options.buttons, _buttons);\r\n\r\n      if (typeof this._options.buttons.showToday !== 'boolean') {\r\n        throw new TypeError('buttons.showToday expects a boolean parameter');\r\n      }\r\n\r\n      if (typeof this._options.buttons.showClear !== 'boolean') {\r\n        throw new TypeError('buttons.showClear expects a boolean parameter');\r\n      }\r\n\r\n      if (typeof this._options.buttons.showClose !== 'boolean') {\r\n        throw new TypeError('buttons.showClose expects a boolean parameter');\r\n      }\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto.keepOpen = function keepOpen(_keepOpen) {\r\n      if (arguments.length === 0) {\r\n        return this._options.keepOpen;\r\n      }\r\n\r\n      if (typeof _keepOpen !== 'boolean') {\r\n        throw new TypeError('keepOpen() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.keepOpen = _keepOpen;\r\n    };\r\n\r\n    _proto.focusOnShow = function focusOnShow(_focusOnShow) {\r\n      if (arguments.length === 0) {\r\n        return this._options.focusOnShow;\r\n      }\r\n\r\n      if (typeof _focusOnShow !== 'boolean') {\r\n        throw new TypeError('focusOnShow() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.focusOnShow = _focusOnShow;\r\n    };\r\n\r\n    _proto.inline = function inline(_inline) {\r\n      if (arguments.length === 0) {\r\n        return this._options.inline;\r\n      }\r\n\r\n      if (typeof _inline !== 'boolean') {\r\n        throw new TypeError('inline() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.inline = _inline;\r\n    };\r\n\r\n    _proto.clear = function clear() {\r\n      this._setValue(null); //todo\r\n\r\n    };\r\n\r\n    _proto.keyBinds = function keyBinds(_keyBinds) {\r\n      if (arguments.length === 0) {\r\n        return this._options.keyBinds;\r\n      }\r\n\r\n      this._options.keyBinds = _keyBinds;\r\n    };\r\n\r\n    _proto.debug = function debug(_debug) {\r\n      if (typeof _debug !== 'boolean') {\r\n        throw new TypeError('debug() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.debug = _debug;\r\n    };\r\n\r\n    _proto.allowInputToggle = function allowInputToggle(_allowInputToggle) {\r\n      if (arguments.length === 0) {\r\n        return this._options.allowInputToggle;\r\n      }\r\n\r\n      if (typeof _allowInputToggle !== 'boolean') {\r\n        throw new TypeError('allowInputToggle() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.allowInputToggle = _allowInputToggle;\r\n    };\r\n\r\n    _proto.keepInvalid = function keepInvalid(_keepInvalid) {\r\n      if (arguments.length === 0) {\r\n        return this._options.keepInvalid;\r\n      }\r\n\r\n      if (typeof _keepInvalid !== 'boolean') {\r\n        throw new TypeError('keepInvalid() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.keepInvalid = _keepInvalid;\r\n    };\r\n\r\n    _proto.datepickerInput = function datepickerInput(_datepickerInput) {\r\n      if (arguments.length === 0) {\r\n        return this._options.datepickerInput;\r\n      }\r\n\r\n      if (typeof _datepickerInput !== 'string') {\r\n        throw new TypeError('datepickerInput() expects a string parameter');\r\n      }\r\n\r\n      this._options.datepickerInput = _datepickerInput;\r\n    };\r\n\r\n    _proto.parseInputDate = function parseInputDate(_parseInputDate2) {\r\n      if (arguments.length === 0) {\r\n        return this._options.parseInputDate;\r\n      }\r\n\r\n      if (typeof _parseInputDate2 !== 'function') {\r\n        throw new TypeError('parseInputDate() should be as function');\r\n      }\r\n\r\n      this._options.parseInputDate = _parseInputDate2;\r\n    };\r\n\r\n    _proto.disabledTimeIntervals = function disabledTimeIntervals(_disabledTimeIntervals) {\r\n      if (arguments.length === 0) {\r\n        return this._options.disabledTimeIntervals ? $.extend({}, this._options.disabledTimeIntervals) : this._options.disabledTimeIntervals;\r\n      }\r\n\r\n      if (!_disabledTimeIntervals) {\r\n        this._options.disabledTimeIntervals = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (!(_disabledTimeIntervals instanceof Array)) {\r\n        throw new TypeError('disabledTimeIntervals() expects an array parameter');\r\n      }\r\n\r\n      this._options.disabledTimeIntervals = _disabledTimeIntervals;\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.disabledHours = function disabledHours(hours) {\r\n      if (arguments.length === 0) {\r\n        return this._options.disabledHours ? $.extend({}, this._options.disabledHours) : this._options.disabledHours;\r\n      }\r\n\r\n      if (!hours) {\r\n        this._options.disabledHours = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (!(hours instanceof Array)) {\r\n        throw new TypeError('disabledHours() expects an array parameter');\r\n      }\r\n\r\n      this._options.disabledHours = this._indexGivenHours(hours);\r\n      this._options.enabledHours = false;\r\n\r\n      if (this._options.useCurrent && !this._options.keepInvalid) {\r\n        for (var i = 0; i < this._dates.length; i++) {\r\n          var tries = 0;\r\n\r\n          while (!this._isValid(this._dates[i], 'h')) {\r\n            this._dates[i].add(1, 'h');\r\n\r\n            if (tries === 24) {\r\n              throw 'Tried 24 times to find a valid date';\r\n            }\r\n\r\n            tries++;\r\n          }\r\n\r\n          this._setValue(this._dates[i], i);\r\n        }\r\n      }\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.enabledHours = function enabledHours(hours) {\r\n      if (arguments.length === 0) {\r\n        return this._options.enabledHours ? $.extend({}, this._options.enabledHours) : this._options.enabledHours;\r\n      }\r\n\r\n      if (!hours) {\r\n        this._options.enabledHours = false;\r\n\r\n        this._update();\r\n\r\n        return true;\r\n      }\r\n\r\n      if (!(hours instanceof Array)) {\r\n        throw new TypeError('enabledHours() expects an array parameter');\r\n      }\r\n\r\n      this._options.enabledHours = this._indexGivenHours(hours);\r\n      this._options.disabledHours = false;\r\n\r\n      if (this._options.useCurrent && !this._options.keepInvalid) {\r\n        for (var i = 0; i < this._dates.length; i++) {\r\n          var tries = 0;\r\n\r\n          while (!this._isValid(this._dates[i], 'h')) {\r\n            this._dates[i].add(1, 'h');\r\n\r\n            if (tries === 24) {\r\n              throw 'Tried 24 times to find a valid date';\r\n            }\r\n\r\n            tries++;\r\n          }\r\n\r\n          this._setValue(this._dates[i], i);\r\n        }\r\n      }\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto.viewDate = function viewDate(newDate) {\r\n      if (arguments.length === 0) {\r\n        return this._viewDate.clone();\r\n      }\r\n\r\n      if (!newDate) {\r\n        this._viewDate = (this._dates[0] || this.getMoment()).clone();\r\n        return true;\r\n      }\r\n\r\n      if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\r\n        throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');\r\n      }\r\n\r\n      this._viewDate = this._parseInputDate(newDate);\r\n\r\n      this._update();\r\n\r\n      this._viewUpdate(DatePickerModes[this.currentViewMode] && DatePickerModes[this.currentViewMode].NAV_FUNCTION);\r\n    };\r\n\r\n    _proto._fillDate = function _fillDate() {};\r\n\r\n    _proto._useFeatherIcons = function _useFeatherIcons() {\r\n      return this._options.icons.type === 'feather';\r\n    };\r\n\r\n    _proto.allowMultidate = function allowMultidate(_allowMultidate) {\r\n      if (typeof _allowMultidate !== 'boolean') {\r\n        throw new TypeError('allowMultidate() expects a boolean parameter');\r\n      }\r\n\r\n      this._options.allowMultidate = _allowMultidate;\r\n    };\r\n\r\n    _proto.multidateSeparator = function multidateSeparator(_multidateSeparator) {\r\n      if (arguments.length === 0) {\r\n        return this._options.multidateSeparator;\r\n      }\r\n\r\n      if (typeof _multidateSeparator !== 'string') {\r\n        throw new TypeError('multidateSeparator expects a string parameter');\r\n      }\r\n\r\n      this._options.multidateSeparator = _multidateSeparator;\r\n    };\r\n\r\n    _createClass(DateTimePicker, null, [{\r\n      key: \"NAME\",\r\n      get: function get() {\r\n        return NAME;\r\n      }\r\n      /**\r\n       * @return {string}\r\n       */\r\n\r\n    }, {\r\n      key: \"DATA_KEY\",\r\n      get: function get() {\r\n        return DATA_KEY;\r\n      }\r\n      /**\r\n       * @return {string}\r\n       */\r\n\r\n    }, {\r\n      key: \"EVENT_KEY\",\r\n      get: function get() {\r\n        return EVENT_KEY;\r\n      }\r\n      /**\r\n       * @return {string}\r\n       */\r\n\r\n    }, {\r\n      key: \"DATA_API_KEY\",\r\n      get: function get() {\r\n        return DATA_API_KEY;\r\n      }\r\n    }, {\r\n      key: \"DatePickerModes\",\r\n      get: function get() {\r\n        return DatePickerModes;\r\n      }\r\n    }, {\r\n      key: \"ViewModes\",\r\n      get: function get() {\r\n        return ViewModes;\r\n      }\r\n    }, {\r\n      key: \"Event\",\r\n      get: function get() {\r\n        return Event;\r\n      }\r\n    }, {\r\n      key: \"Selector\",\r\n      get: function get() {\r\n        return Selector;\r\n      }\r\n    }, {\r\n      key: \"Default\",\r\n      get: function get() {\r\n        return Default;\r\n      },\r\n      set: function set(value) {\r\n        Default = value;\r\n      }\r\n    }, {\r\n      key: \"ClassName\",\r\n      get: function get() {\r\n        return ClassName;\r\n      }\r\n    }]);\r\n\r\n    return DateTimePicker;\r\n  }();\r\n\r\n  return DateTimePicker;\r\n}(jQuery, moment); //noinspection JSUnusedGlobalSymbols\r\n\r\n/* global DateTimePicker */\r\n\r\n/* global feather */\r\n\r\n\r\nvar TempusDominusBootstrap4 = function ($) {\r\n  // eslint-disable-line no-unused-vars\r\n  // ReSharper disable once InconsistentNaming\r\n  var JQUERY_NO_CONFLICT = $.fn[DateTimePicker.NAME],\r\n      verticalModes = ['top', 'bottom', 'auto'],\r\n      horizontalModes = ['left', 'right', 'auto'],\r\n      toolbarPlacements = ['default', 'top', 'bottom'],\r\n      getSelectorFromElement = function getSelectorFromElement($element) {\r\n    var selector = $element.data('target'),\r\n        $selector;\r\n\r\n    if (!selector) {\r\n      selector = $element.attr('href') || '';\r\n      selector = /^#[a-z]/i.test(selector) ? selector : null;\r\n    }\r\n\r\n    $selector = $(selector);\r\n\r\n    if ($selector.length === 0) {\r\n      return $element;\r\n    }\r\n\r\n    if (!$selector.data(DateTimePicker.DATA_KEY)) {\r\n      $.extend({}, $selector.data(), $(this).data());\r\n    }\r\n\r\n    return $selector;\r\n  }; // ReSharper disable once InconsistentNaming\r\n\r\n\r\n  var TempusDominusBootstrap4 = /*#__PURE__*/function (_DateTimePicker) {\r\n    _inheritsLoose(TempusDominusBootstrap4, _DateTimePicker);\r\n\r\n    function TempusDominusBootstrap4(element, options) {\r\n      var _this;\r\n\r\n      _this = _DateTimePicker.call(this, element, options) || this;\r\n\r\n      _this._init();\r\n\r\n      return _this;\r\n    }\r\n\r\n    var _proto2 = TempusDominusBootstrap4.prototype;\r\n\r\n    _proto2._init = function _init() {\r\n      if (this._element.hasClass('input-group')) {\r\n        var datepickerButton = this._element.find('.datepickerbutton');\r\n\r\n        if (datepickerButton.length === 0) {\r\n          this.component = this._element.find('[data-toggle=\"datetimepicker\"]');\r\n        } else {\r\n          this.component = datepickerButton;\r\n        }\r\n      }\r\n    };\r\n\r\n    _proto2._iconTag = function _iconTag(iconName) {\r\n      if (typeof feather !== 'undefined' && this._useFeatherIcons() && feather.icons[iconName]) {\r\n        return $('<span>').html(feather.icons[iconName].toSvg());\r\n      } else {\r\n        return $('<span>').addClass(iconName);\r\n      }\r\n    };\r\n\r\n    _proto2._getDatePickerTemplate = function _getDatePickerTemplate() {\r\n      var headTemplate = $('<thead>').append($('<tr>').append($('<th>').addClass('prev').attr('data-action', 'previous').append(this._iconTag(this._options.icons.previous))).append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', \"\" + (this._options.calendarWeeks ? '6' : '5'))).append($('<th>').addClass('next').attr('data-action', 'next').append(this._iconTag(this._options.icons.next)))),\r\n          contTemplate = $('<tbody>').append($('<tr>').append($('<td>').attr('colspan', \"\" + (this._options.calendarWeeks ? '8' : '7'))));\r\n      return [$('<div>').addClass('datepicker-days').append($('<table>').addClass('table table-sm').append(headTemplate).append($('<tbody>'))), $('<div>').addClass('datepicker-months').append($('<table>').addClass('table-condensed').append(headTemplate.clone()).append(contTemplate.clone())), $('<div>').addClass('datepicker-years').append($('<table>').addClass('table-condensed').append(headTemplate.clone()).append(contTemplate.clone())), $('<div>').addClass('datepicker-decades').append($('<table>').addClass('table-condensed').append(headTemplate.clone()).append(contTemplate.clone()))];\r\n    };\r\n\r\n    _proto2._getTimePickerMainTemplate = function _getTimePickerMainTemplate() {\r\n      var topRow = $('<tr>'),\r\n          middleRow = $('<tr>'),\r\n          bottomRow = $('<tr>');\r\n\r\n      if (this._isEnabled('h')) {\r\n        topRow.append($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'title': this._options.tooltips.incrementHour\r\n        }).addClass('btn').attr('data-action', 'incrementHours').append(this._iconTag(this._options.icons.up))));\r\n        middleRow.append($('<td>').append($('<span>').addClass('timepicker-hour').attr({\r\n          'data-time-component': 'hours',\r\n          'title': this._options.tooltips.pickHour\r\n        }).attr('data-action', 'showHours')));\r\n        bottomRow.append($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'title': this._options.tooltips.decrementHour\r\n        }).addClass('btn').attr('data-action', 'decrementHours').append(this._iconTag(this._options.icons.down))));\r\n      }\r\n\r\n      if (this._isEnabled('m')) {\r\n        if (this._isEnabled('h')) {\r\n          topRow.append($('<td>').addClass('separator'));\r\n          middleRow.append($('<td>').addClass('separator').html(':'));\r\n          bottomRow.append($('<td>').addClass('separator'));\r\n        }\r\n\r\n        topRow.append($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'title': this._options.tooltips.incrementMinute\r\n        }).addClass('btn').attr('data-action', 'incrementMinutes').append(this._iconTag(this._options.icons.up))));\r\n        middleRow.append($('<td>').append($('<span>').addClass('timepicker-minute').attr({\r\n          'data-time-component': 'minutes',\r\n          'title': this._options.tooltips.pickMinute\r\n        }).attr('data-action', 'showMinutes')));\r\n        bottomRow.append($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'title': this._options.tooltips.decrementMinute\r\n        }).addClass('btn').attr('data-action', 'decrementMinutes').append(this._iconTag(this._options.icons.down))));\r\n      }\r\n\r\n      if (this._isEnabled('s')) {\r\n        if (this._isEnabled('m')) {\r\n          topRow.append($('<td>').addClass('separator'));\r\n          middleRow.append($('<td>').addClass('separator').html(':'));\r\n          bottomRow.append($('<td>').addClass('separator'));\r\n        }\r\n\r\n        topRow.append($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'title': this._options.tooltips.incrementSecond\r\n        }).addClass('btn').attr('data-action', 'incrementSeconds').append(this._iconTag(this._options.icons.up))));\r\n        middleRow.append($('<td>').append($('<span>').addClass('timepicker-second').attr({\r\n          'data-time-component': 'seconds',\r\n          'title': this._options.tooltips.pickSecond\r\n        }).attr('data-action', 'showSeconds')));\r\n        bottomRow.append($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'title': this._options.tooltips.decrementSecond\r\n        }).addClass('btn').attr('data-action', 'decrementSeconds').append(this._iconTag(this._options.icons.down))));\r\n      }\r\n\r\n      if (!this.use24Hours) {\r\n        topRow.append($('<td>').addClass('separator'));\r\n        middleRow.append($('<td>').append($('<button>').addClass('btn btn-primary').attr({\r\n          'data-action': 'togglePeriod',\r\n          tabindex: '-1',\r\n          'title': this._options.tooltips.togglePeriod\r\n        })));\r\n        bottomRow.append($('<td>').addClass('separator'));\r\n      }\r\n\r\n      return $('<div>').addClass('timepicker-picker').append($('<table>').addClass('table-condensed').append([topRow, middleRow, bottomRow]));\r\n    };\r\n\r\n    _proto2._getTimePickerTemplate = function _getTimePickerTemplate() {\r\n      var hoursView = $('<div>').addClass('timepicker-hours').append($('<table>').addClass('table-condensed')),\r\n          minutesView = $('<div>').addClass('timepicker-minutes').append($('<table>').addClass('table-condensed')),\r\n          secondsView = $('<div>').addClass('timepicker-seconds').append($('<table>').addClass('table-condensed')),\r\n          ret = [this._getTimePickerMainTemplate()];\r\n\r\n      if (this._isEnabled('h')) {\r\n        ret.push(hoursView);\r\n      }\r\n\r\n      if (this._isEnabled('m')) {\r\n        ret.push(minutesView);\r\n      }\r\n\r\n      if (this._isEnabled('s')) {\r\n        ret.push(secondsView);\r\n      }\r\n\r\n      return ret;\r\n    };\r\n\r\n    _proto2._getToolbar = function _getToolbar() {\r\n      var row = [];\r\n\r\n      if (this._options.buttons.showToday) {\r\n        row.push($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'data-action': 'today',\r\n          'title': this._options.tooltips.today\r\n        }).append(this._iconTag(this._options.icons.today))));\r\n      }\r\n\r\n      if (!this._options.sideBySide && this._options.collapse && this._hasDate() && this._hasTime()) {\r\n        var title, icon;\r\n\r\n        if (this._options.viewMode === 'times') {\r\n          title = this._options.tooltips.selectDate;\r\n          icon = this._options.icons.date;\r\n        } else {\r\n          title = this._options.tooltips.selectTime;\r\n          icon = this._options.icons.time;\r\n        }\r\n\r\n        row.push($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'data-action': 'togglePicker',\r\n          'title': title\r\n        }).append(this._iconTag(icon))));\r\n      }\r\n\r\n      if (this._options.buttons.showClear) {\r\n        row.push($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'data-action': 'clear',\r\n          'title': this._options.tooltips.clear\r\n        }).append(this._iconTag(this._options.icons.clear))));\r\n      }\r\n\r\n      if (this._options.buttons.showClose) {\r\n        row.push($('<td>').append($('<a>').attr({\r\n          href: '#',\r\n          tabindex: '-1',\r\n          'data-action': 'close',\r\n          'title': this._options.tooltips.close\r\n        }).append(this._iconTag(this._options.icons.close))));\r\n      }\r\n\r\n      return row.length === 0 ? '' : $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));\r\n    };\r\n\r\n    _proto2._getTemplate = function _getTemplate() {\r\n      var template = $('<div>').addClass((\"bootstrap-datetimepicker-widget dropdown-menu \" + (this._options.calendarWeeks ? 'tempusdominus-bootstrap-datetimepicker-widget-with-calendar-weeks' : '') + \" \" + ((this._useFeatherIcons() ? 'tempusdominus-bootstrap-datetimepicker-widget-with-feather-icons' : '') + \" \")).trim()),\r\n          dateView = $('<div>').addClass('datepicker').append(this._getDatePickerTemplate()),\r\n          timeView = $('<div>').addClass('timepicker').append(this._getTimePickerTemplate()),\r\n          content = $('<ul>').addClass('list-unstyled'),\r\n          toolbar = $('<li>').addClass((\"picker-switch\" + (this._options.collapse ? ' accordion-toggle' : '') + \" \" + (\"\" + (this._useFeatherIcons() ? 'picker-switch-with-feathers-icons' : ''))).trim()).append(this._getToolbar());\r\n\r\n      if (this._options.inline) {\r\n        template.removeClass('dropdown-menu');\r\n      }\r\n\r\n      if (this.use24Hours) {\r\n        template.addClass('usetwentyfour');\r\n      }\r\n\r\n      if (this.input !== undefined && this.input.prop('readonly') || this._options.readonly) {\r\n        template.addClass('bootstrap-datetimepicker-widget-readonly');\r\n      }\r\n\r\n      if (this._isEnabled('s') && !this.use24Hours) {\r\n        template.addClass('wider');\r\n      }\r\n\r\n      if (this._options.sideBySide && this._hasDate() && this._hasTime()) {\r\n        template.addClass('timepicker-sbs');\r\n\r\n        if (this._options.toolbarPlacement === 'top') {\r\n          template.append(toolbar);\r\n        }\r\n\r\n        template.append($('<div>').addClass('row').append(dateView.addClass('col-md-6')).append(timeView.addClass('col-md-6')));\r\n\r\n        if (this._options.toolbarPlacement === 'bottom' || this._options.toolbarPlacement === 'default') {\r\n          template.append(toolbar);\r\n        }\r\n\r\n        return template;\r\n      }\r\n\r\n      if (this._options.toolbarPlacement === 'top') {\r\n        content.append(toolbar);\r\n      }\r\n\r\n      if (this._hasDate()) {\r\n        content.append($('<li>').addClass(this._options.collapse && this._hasTime() ? 'collapse' : '').addClass(this._options.collapse && this._hasTime() && this._options.viewMode === 'times' ? '' : 'show').append(dateView));\r\n      }\r\n\r\n      if (this._options.toolbarPlacement === 'default') {\r\n        content.append(toolbar);\r\n      }\r\n\r\n      if (this._hasTime()) {\r\n        content.append($('<li>').addClass(this._options.collapse && this._hasDate() ? 'collapse' : '').addClass(this._options.collapse && this._hasDate() && this._options.viewMode === 'times' ? 'show' : '').append(timeView));\r\n      }\r\n\r\n      if (this._options.toolbarPlacement === 'bottom') {\r\n        content.append(toolbar);\r\n      }\r\n\r\n      return template.append(content);\r\n    };\r\n\r\n    _proto2._place = function _place(e) {\r\n      var self = e && e.data && e.data.picker || this,\r\n          vertical = self._options.widgetPositioning.vertical,\r\n          horizontal = self._options.widgetPositioning.horizontal,\r\n          parent;\r\n      var position = (self.component && self.component.length ? self.component : self._element).position(),\r\n          offset = (self.component && self.component.length ? self.component : self._element).offset();\r\n\r\n      if (self._options.widgetParent) {\r\n        parent = self._options.widgetParent.append(self.widget);\r\n      } else if (self._element.is('input')) {\r\n        parent = self._element.after(self.widget).parent();\r\n      } else if (self._options.inline) {\r\n        parent = self._element.append(self.widget);\r\n        return;\r\n      } else {\r\n        parent = self._element;\r\n\r\n        self._element.children().first().after(self.widget);\r\n      } // Top and bottom logic\r\n\r\n\r\n      if (vertical === 'auto') {\r\n        //noinspection JSValidateTypes\r\n        if (offset.top + self.widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() && self.widget.height() + self._element.outerHeight() < offset.top) {\r\n          vertical = 'top';\r\n        } else {\r\n          vertical = 'bottom';\r\n        }\r\n      } // Left and right logic\r\n\r\n\r\n      if (horizontal === 'auto') {\r\n        if (parent.width() < offset.left + self.widget.outerWidth() / 2 && offset.left + self.widget.outerWidth() > $(window).width()) {\r\n          horizontal = 'right';\r\n        } else {\r\n          horizontal = 'left';\r\n        }\r\n      }\r\n\r\n      if (vertical === 'top') {\r\n        self.widget.addClass('top').removeClass('bottom');\r\n      } else {\r\n        self.widget.addClass('bottom').removeClass('top');\r\n      }\r\n\r\n      if (horizontal === 'right') {\r\n        self.widget.addClass('float-right');\r\n      } else {\r\n        self.widget.removeClass('float-right');\r\n      } // find the first parent element that has a relative css positioning\r\n\r\n\r\n      if (parent.css('position') !== 'relative') {\r\n        parent = parent.parents().filter(function () {\r\n          return $(this).css('position') === 'relative';\r\n        }).first();\r\n      }\r\n\r\n      if (parent.length === 0) {\r\n        throw new Error('datetimepicker component should be placed within a relative positioned container');\r\n      }\r\n\r\n      self.widget.css({\r\n        top: vertical === 'top' ? 'auto' : position.top + self._element.outerHeight() + 'px',\r\n        bottom: vertical === 'top' ? parent.outerHeight() - (parent === self._element ? 0 : position.top) + 'px' : 'auto',\r\n        left: horizontal === 'left' ? (parent === self._element ? 0 : position.left) + 'px' : 'auto',\r\n        right: horizontal === 'left' ? 'auto' : parent.outerWidth() - self._element.outerWidth() - (parent === self._element ? 0 : position.left) + 'px'\r\n      });\r\n    };\r\n\r\n    _proto2._fillDow = function _fillDow() {\r\n      var row = $('<tr>'),\r\n          currentDate = this._viewDate.clone().startOf('w').startOf('d');\r\n\r\n      if (this._options.calendarWeeks === true) {\r\n        row.append($('<th>').addClass('cw').text('#'));\r\n      }\r\n\r\n      while (currentDate.isBefore(this._viewDate.clone().endOf('w'))) {\r\n        row.append($('<th>').addClass('dow').text(currentDate.format('dd')));\r\n        currentDate.add(1, 'd');\r\n      }\r\n\r\n      this.widget.find('.datepicker-days thead').append(row);\r\n    };\r\n\r\n    _proto2._fillMonths = function _fillMonths() {\r\n      var spans = [],\r\n          monthsShort = this._viewDate.clone().startOf('y').startOf('d');\r\n\r\n      while (monthsShort.isSame(this._viewDate, 'y')) {\r\n        spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));\r\n        monthsShort.add(1, 'M');\r\n      }\r\n\r\n      this.widget.find('.datepicker-months td').empty().append(spans);\r\n    };\r\n\r\n    _proto2._updateMonths = function _updateMonths() {\r\n      var monthsView = this.widget.find('.datepicker-months'),\r\n          monthsViewHeader = monthsView.find('th'),\r\n          months = monthsView.find('tbody').find('span'),\r\n          self = this,\r\n          lastPickedDate = this._getLastPickedDate();\r\n\r\n      monthsViewHeader.eq(0).find('span').attr('title', this._options.tooltips.prevYear);\r\n      monthsViewHeader.eq(1).attr('title', this._options.tooltips.selectYear);\r\n      monthsViewHeader.eq(2).find('span').attr('title', this._options.tooltips.nextYear);\r\n      monthsView.find('.disabled').removeClass('disabled');\r\n\r\n      if (!this._isValid(this._viewDate.clone().subtract(1, 'y'), 'y')) {\r\n        monthsViewHeader.eq(0).addClass('disabled');\r\n      }\r\n\r\n      monthsViewHeader.eq(1).text(this._viewDate.year());\r\n\r\n      if (!this._isValid(this._viewDate.clone().add(1, 'y'), 'y')) {\r\n        monthsViewHeader.eq(2).addClass('disabled');\r\n      }\r\n\r\n      months.removeClass('active');\r\n\r\n      if (lastPickedDate && lastPickedDate.isSame(this._viewDate, 'y') && !this.unset) {\r\n        months.eq(lastPickedDate.month()).addClass('active');\r\n      }\r\n\r\n      months.each(function (index) {\r\n        if (!self._isValid(self._viewDate.clone().month(index), 'M')) {\r\n          $(this).addClass('disabled');\r\n        }\r\n      });\r\n    };\r\n\r\n    _proto2._getStartEndYear = function _getStartEndYear(factor, year) {\r\n      var step = factor / 10,\r\n          startYear = Math.floor(year / factor) * factor,\r\n          endYear = startYear + step * 9,\r\n          focusValue = Math.floor(year / step) * step;\r\n      return [startYear, endYear, focusValue];\r\n    };\r\n\r\n    _proto2._updateYears = function _updateYears() {\r\n      var yearsView = this.widget.find('.datepicker-years'),\r\n          yearsViewHeader = yearsView.find('th'),\r\n          yearCaps = this._getStartEndYear(10, this._viewDate.year()),\r\n          startYear = this._viewDate.clone().year(yearCaps[0]),\r\n          endYear = this._viewDate.clone().year(yearCaps[1]);\r\n\r\n      var html = '';\r\n      yearsViewHeader.eq(0).find('span').attr('title', this._options.tooltips.prevDecade);\r\n      yearsViewHeader.eq(1).attr('title', this._options.tooltips.selectDecade);\r\n      yearsViewHeader.eq(2).find('span').attr('title', this._options.tooltips.nextDecade);\r\n      yearsView.find('.disabled').removeClass('disabled');\r\n\r\n      if (this._options.minDate && this._options.minDate.isAfter(startYear, 'y')) {\r\n        yearsViewHeader.eq(0).addClass('disabled');\r\n      }\r\n\r\n      yearsViewHeader.eq(1).text(startYear.year() + \"-\" + endYear.year());\r\n\r\n      if (this._options.maxDate && this._options.maxDate.isBefore(endYear, 'y')) {\r\n        yearsViewHeader.eq(2).addClass('disabled');\r\n      }\r\n\r\n      html += \"<span data-action=\\\"selectYear\\\" class=\\\"year old\" + (!this._isValid(startYear, 'y') ? ' disabled' : '') + \"\\\">\" + (startYear.year() - 1) + \"</span>\";\r\n\r\n      while (!startYear.isAfter(endYear, 'y')) {\r\n        html += \"<span data-action=\\\"selectYear\\\" class=\\\"year\" + (startYear.isSame(this._getLastPickedDate(), 'y') && !this.unset ? ' active' : '') + (!this._isValid(startYear, 'y') ? ' disabled' : '') + \"\\\">\" + startYear.year() + \"</span>\";\r\n        startYear.add(1, 'y');\r\n      }\r\n\r\n      html += \"<span data-action=\\\"selectYear\\\" class=\\\"year old\" + (!this._isValid(startYear, 'y') ? ' disabled' : '') + \"\\\">\" + startYear.year() + \"</span>\";\r\n      yearsView.find('td').html(html);\r\n    };\r\n\r\n    _proto2._updateDecades = function _updateDecades() {\r\n      var decadesView = this.widget.find('.datepicker-decades'),\r\n          decadesViewHeader = decadesView.find('th'),\r\n          yearCaps = this._getStartEndYear(100, this._viewDate.year()),\r\n          startDecade = this._viewDate.clone().year(yearCaps[0]),\r\n          endDecade = this._viewDate.clone().year(yearCaps[1]),\r\n          lastPickedDate = this._getLastPickedDate();\r\n\r\n      var minDateDecade = false,\r\n          maxDateDecade = false,\r\n          endDecadeYear,\r\n          html = '';\r\n      decadesViewHeader.eq(0).find('span').attr('title', this._options.tooltips.prevCentury);\r\n      decadesViewHeader.eq(2).find('span').attr('title', this._options.tooltips.nextCentury);\r\n      decadesView.find('.disabled').removeClass('disabled');\r\n\r\n      if (startDecade.year() === 0 || this._options.minDate && this._options.minDate.isAfter(startDecade, 'y')) {\r\n        decadesViewHeader.eq(0).addClass('disabled');\r\n      }\r\n\r\n      decadesViewHeader.eq(1).text(startDecade.year() + \"-\" + endDecade.year());\r\n\r\n      if (this._options.maxDate && this._options.maxDate.isBefore(endDecade, 'y')) {\r\n        decadesViewHeader.eq(2).addClass('disabled');\r\n      }\r\n\r\n      if (startDecade.year() - 10 < 0) {\r\n        html += '<span>&nbsp;</span>';\r\n      } else {\r\n        html += \"<span data-action=\\\"selectDecade\\\" class=\\\"decade old\\\" data-selection=\\\"\" + (startDecade.year() + 6) + \"\\\">\" + (startDecade.year() - 10) + \"</span>\";\r\n      }\r\n\r\n      while (!startDecade.isAfter(endDecade, 'y')) {\r\n        endDecadeYear = startDecade.year() + 11;\r\n        minDateDecade = this._options.minDate && this._options.minDate.isAfter(startDecade, 'y') && this._options.minDate.year() <= endDecadeYear;\r\n        maxDateDecade = this._options.maxDate && this._options.maxDate.isAfter(startDecade, 'y') && this._options.maxDate.year() <= endDecadeYear;\r\n        html += \"<span data-action=\\\"selectDecade\\\" class=\\\"decade\" + (lastPickedDate && lastPickedDate.isAfter(startDecade) && lastPickedDate.year() <= endDecadeYear ? ' active' : '') + (!this._isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + \"\\\" data-selection=\\\"\" + (startDecade.year() + 6) + \"\\\">\" + startDecade.year() + \"</span>\";\r\n        startDecade.add(10, 'y');\r\n      }\r\n\r\n      html += \"<span data-action=\\\"selectDecade\\\" class=\\\"decade old\\\" data-selection=\\\"\" + (startDecade.year() + 6) + \"\\\">\" + startDecade.year() + \"</span>\";\r\n      decadesView.find('td').html(html);\r\n    };\r\n\r\n    _proto2._fillDate = function _fillDate() {\r\n      _DateTimePicker.prototype._fillDate.call(this);\r\n\r\n      var daysView = this.widget.find('.datepicker-days'),\r\n          daysViewHeader = daysView.find('th'),\r\n          html = [];\r\n      var currentDate, row, clsName, i;\r\n\r\n      if (!this._hasDate()) {\r\n        return;\r\n      }\r\n\r\n      daysViewHeader.eq(0).find('span').attr('title', this._options.tooltips.prevMonth);\r\n      daysViewHeader.eq(1).attr('title', this._options.tooltips.selectMonth);\r\n      daysViewHeader.eq(2).find('span').attr('title', this._options.tooltips.nextMonth);\r\n      daysView.find('.disabled').removeClass('disabled');\r\n      daysViewHeader.eq(1).text(this._viewDate.format(this._options.dayViewHeaderFormat));\r\n\r\n      if (!this._isValid(this._viewDate.clone().subtract(1, 'M'), 'M')) {\r\n        daysViewHeader.eq(0).addClass('disabled');\r\n      }\r\n\r\n      if (!this._isValid(this._viewDate.clone().add(1, 'M'), 'M')) {\r\n        daysViewHeader.eq(2).addClass('disabled');\r\n      }\r\n\r\n      currentDate = this._viewDate.clone().startOf('M').startOf('w').startOf('d');\r\n\r\n      for (i = 0; i < 42; i++) {\r\n        //always display 42 days (should show 6 weeks)\r\n        if (currentDate.weekday() === 0) {\r\n          row = $('<tr>');\r\n\r\n          if (this._options.calendarWeeks) {\r\n            row.append(\"<td class=\\\"cw\\\">\" + currentDate.week() + \"</td>\");\r\n          }\r\n\r\n          html.push(row);\r\n        }\r\n\r\n        clsName = '';\r\n\r\n        if (currentDate.isBefore(this._viewDate, 'M')) {\r\n          clsName += ' old';\r\n        }\r\n\r\n        if (currentDate.isAfter(this._viewDate, 'M')) {\r\n          clsName += ' new';\r\n        }\r\n\r\n        if (this._options.allowMultidate) {\r\n          var index = this._datesFormatted.indexOf(currentDate.format('YYYY-MM-DD'));\r\n\r\n          if (index !== -1) {\r\n            if (currentDate.isSame(this._datesFormatted[index], 'd') && !this.unset) {\r\n              clsName += ' active';\r\n            }\r\n          }\r\n        } else {\r\n          if (currentDate.isSame(this._getLastPickedDate(), 'd') && !this.unset) {\r\n            clsName += ' active';\r\n          }\r\n        }\r\n\r\n        if (!this._isValid(currentDate, 'd')) {\r\n          clsName += ' disabled';\r\n        }\r\n\r\n        if (currentDate.isSame(this.getMoment(), 'd')) {\r\n          clsName += ' today';\r\n        }\r\n\r\n        if (currentDate.day() === 0 || currentDate.day() === 6) {\r\n          clsName += ' weekend';\r\n        }\r\n\r\n        row.append(\"<td data-action=\\\"selectDay\\\" data-day=\\\"\" + currentDate.format('L') + \"\\\" class=\\\"day\" + clsName + \"\\\">\" + currentDate.date() + \"</td>\");\r\n        currentDate.add(1, 'd');\r\n      }\r\n\r\n      $('body').addClass('tempusdominus-bootstrap-datetimepicker-widget-day-click');\r\n      $('body').append('<div class=\"tempusdominus-bootstrap-datetimepicker-widget-day-click-glass-panel\"></div>');\r\n      daysView.find('tbody').empty().append(html);\r\n      $('body').find('.tempusdominus-bootstrap-datetimepicker-widget-day-click-glass-panel').remove();\r\n      $('body').removeClass('tempusdominus-bootstrap-datetimepicker-widget-day-click');\r\n\r\n      this._updateMonths();\r\n\r\n      this._updateYears();\r\n\r\n      this._updateDecades();\r\n    };\r\n\r\n    _proto2._fillHours = function _fillHours() {\r\n      var table = this.widget.find('.timepicker-hours table'),\r\n          currentHour = this._viewDate.clone().startOf('d'),\r\n          html = [];\r\n\r\n      var row = $('<tr>');\r\n\r\n      if (this._viewDate.hour() > 11 && !this.use24Hours) {\r\n        currentHour.hour(12);\r\n      }\r\n\r\n      while (currentHour.isSame(this._viewDate, 'd') && (this.use24Hours || this._viewDate.hour() < 12 && currentHour.hour() < 12 || this._viewDate.hour() > 11)) {\r\n        if (currentHour.hour() % 4 === 0) {\r\n          row = $('<tr>');\r\n          html.push(row);\r\n        }\r\n\r\n        row.append(\"<td data-action=\\\"selectHour\\\" class=\\\"hour\" + (!this._isValid(currentHour, 'h') ? ' disabled' : '') + \"\\\">\" + currentHour.format(this.use24Hours ? 'HH' : 'hh') + \"</td>\");\r\n        currentHour.add(1, 'h');\r\n      }\r\n\r\n      table.empty().append(html);\r\n    };\r\n\r\n    _proto2._fillMinutes = function _fillMinutes() {\r\n      var table = this.widget.find('.timepicker-minutes table'),\r\n          currentMinute = this._viewDate.clone().startOf('h'),\r\n          html = [],\r\n          step = this._options.stepping === 1 ? 5 : this._options.stepping;\r\n\r\n      var row = $('<tr>');\r\n\r\n      while (this._viewDate.isSame(currentMinute, 'h')) {\r\n        if (currentMinute.minute() % (step * 4) === 0) {\r\n          row = $('<tr>');\r\n          html.push(row);\r\n        }\r\n\r\n        row.append(\"<td data-action=\\\"selectMinute\\\" class=\\\"minute\" + (!this._isValid(currentMinute, 'm') ? ' disabled' : '') + \"\\\">\" + currentMinute.format('mm') + \"</td>\");\r\n        currentMinute.add(step, 'm');\r\n      }\r\n\r\n      table.empty().append(html);\r\n    };\r\n\r\n    _proto2._fillSeconds = function _fillSeconds() {\r\n      var table = this.widget.find('.timepicker-seconds table'),\r\n          currentSecond = this._viewDate.clone().startOf('m'),\r\n          html = [];\r\n\r\n      var row = $('<tr>');\r\n\r\n      while (this._viewDate.isSame(currentSecond, 'm')) {\r\n        if (currentSecond.second() % 20 === 0) {\r\n          row = $('<tr>');\r\n          html.push(row);\r\n        }\r\n\r\n        row.append(\"<td data-action=\\\"selectSecond\\\" class=\\\"second\" + (!this._isValid(currentSecond, 's') ? ' disabled' : '') + \"\\\">\" + currentSecond.format('ss') + \"</td>\");\r\n        currentSecond.add(5, 's');\r\n      }\r\n\r\n      table.empty().append(html);\r\n    };\r\n\r\n    _proto2._fillTime = function _fillTime() {\r\n      var toggle, newDate;\r\n\r\n      var timeComponents = this.widget.find('.timepicker span[data-time-component]'),\r\n          lastPickedDate = this._getLastPickedDate();\r\n\r\n      if (!this.use24Hours) {\r\n        toggle = this.widget.find('.timepicker [data-action=togglePeriod]');\r\n        newDate = lastPickedDate ? lastPickedDate.clone().add(lastPickedDate.hours() >= 12 ? -12 : 12, 'h') : void 0;\r\n        lastPickedDate && toggle.text(lastPickedDate.format('A'));\r\n\r\n        if (this._isValid(newDate, 'h')) {\r\n          toggle.removeClass('disabled');\r\n        } else {\r\n          toggle.addClass('disabled');\r\n        }\r\n      }\r\n\r\n      lastPickedDate && timeComponents.filter('[data-time-component=hours]').text(lastPickedDate.format(\"\" + (this.use24Hours ? 'HH' : 'hh')));\r\n      lastPickedDate && timeComponents.filter('[data-time-component=minutes]').text(lastPickedDate.format('mm'));\r\n      lastPickedDate && timeComponents.filter('[data-time-component=seconds]').text(lastPickedDate.format('ss'));\r\n\r\n      this._fillHours();\r\n\r\n      this._fillMinutes();\r\n\r\n      this._fillSeconds();\r\n    };\r\n\r\n    _proto2._doAction = function _doAction(e, action) {\r\n      var lastPicked = this._getLastPickedDate();\r\n\r\n      if ($(e.currentTarget).is('.disabled')) {\r\n        return false;\r\n      }\r\n\r\n      action = action || $(e.currentTarget).data('action');\r\n\r\n      switch (action) {\r\n        case 'next':\r\n          {\r\n            var navFnc = DateTimePicker.DatePickerModes[this.currentViewMode].NAV_FUNCTION;\r\n\r\n            this._viewDate.add(DateTimePicker.DatePickerModes[this.currentViewMode].NAV_STEP, navFnc);\r\n\r\n            this._fillDate();\r\n\r\n            this._viewUpdate(navFnc);\r\n\r\n            break;\r\n          }\r\n\r\n        case 'previous':\r\n          {\r\n            var _navFnc = DateTimePicker.DatePickerModes[this.currentViewMode].NAV_FUNCTION;\r\n\r\n            this._viewDate.subtract(DateTimePicker.DatePickerModes[this.currentViewMode].NAV_STEP, _navFnc);\r\n\r\n            this._fillDate();\r\n\r\n            this._viewUpdate(_navFnc);\r\n\r\n            break;\r\n          }\r\n\r\n        case 'pickerSwitch':\r\n          this._showMode(1);\r\n\r\n          break;\r\n\r\n        case 'selectMonth':\r\n          {\r\n            var month = $(e.target).closest('tbody').find('span').index($(e.target));\r\n\r\n            this._viewDate.month(month);\r\n\r\n            if (this.currentViewMode === this.MinViewModeNumber) {\r\n              this._setValue(lastPicked.clone().year(this._viewDate.year()).month(this._viewDate.month()), this._getLastPickedDateIndex());\r\n\r\n              if (!this._options.inline) {\r\n                this.hide();\r\n              }\r\n            } else {\r\n              this._showMode(-1);\r\n\r\n              this._fillDate();\r\n            }\r\n\r\n            this._viewUpdate('M');\r\n\r\n            break;\r\n          }\r\n\r\n        case 'selectYear':\r\n          {\r\n            var year = parseInt($(e.target).text(), 10) || 0;\r\n\r\n            this._viewDate.year(year);\r\n\r\n            if (this.currentViewMode === this.MinViewModeNumber) {\r\n              this._setValue(lastPicked.clone().year(this._viewDate.year()), this._getLastPickedDateIndex());\r\n\r\n              if (!this._options.inline) {\r\n                this.hide();\r\n              }\r\n            } else {\r\n              this._showMode(-1);\r\n\r\n              this._fillDate();\r\n            }\r\n\r\n            this._viewUpdate('YYYY');\r\n\r\n            break;\r\n          }\r\n\r\n        case 'selectDecade':\r\n          {\r\n            var _year = parseInt($(e.target).data('selection'), 10) || 0;\r\n\r\n            this._viewDate.year(_year);\r\n\r\n            if (this.currentViewMode === this.MinViewModeNumber) {\r\n              this._setValue(lastPicked.clone().year(this._viewDate.year()), this._getLastPickedDateIndex());\r\n\r\n              if (!this._options.inline) {\r\n                this.hide();\r\n              }\r\n            } else {\r\n              this._showMode(-1);\r\n\r\n              this._fillDate();\r\n            }\r\n\r\n            this._viewUpdate('YYYY');\r\n\r\n            break;\r\n          }\r\n\r\n        case 'selectDay':\r\n          {\r\n            var day = this._viewDate.clone();\r\n\r\n            if ($(e.target).is('.old')) {\r\n              day.subtract(1, 'M');\r\n            }\r\n\r\n            if ($(e.target).is('.new')) {\r\n              day.add(1, 'M');\r\n            }\r\n\r\n            var selectDate = day.date(parseInt($(e.target).text(), 10)),\r\n                index = 0;\r\n\r\n            if (this._options.allowMultidate) {\r\n              index = this._datesFormatted.indexOf(selectDate.format('YYYY-MM-DD'));\r\n\r\n              if (index !== -1) {\r\n                this._setValue(null, index); //deselect multidate\r\n\r\n              } else {\r\n                this._setValue(selectDate, this._getLastPickedDateIndex() + 1);\r\n              }\r\n            } else {\r\n              this._setValue(selectDate, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            if (!this._hasTime() && !this._options.keepOpen && !this._options.inline && !this._options.allowMultidate) {\r\n              this.hide();\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'incrementHours':\r\n          {\r\n            if (!lastPicked) {\r\n              break;\r\n            }\r\n\r\n            var newDate = lastPicked.clone().add(1, 'h');\r\n\r\n            if (this._isValid(newDate, 'h')) {\r\n              if (this._getLastPickedDateIndex() < 0) {\r\n                this.date(newDate);\r\n              }\r\n\r\n              this._setValue(newDate, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'incrementMinutes':\r\n          {\r\n            if (!lastPicked) {\r\n              break;\r\n            }\r\n\r\n            var _newDate = lastPicked.clone().add(this._options.stepping, 'm');\r\n\r\n            if (this._isValid(_newDate, 'm')) {\r\n              if (this._getLastPickedDateIndex() < 0) {\r\n                this.date(_newDate);\r\n              }\r\n\r\n              this._setValue(_newDate, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'incrementSeconds':\r\n          {\r\n            if (!lastPicked) {\r\n              break;\r\n            }\r\n\r\n            var _newDate2 = lastPicked.clone().add(1, 's');\r\n\r\n            if (this._isValid(_newDate2, 's')) {\r\n              if (this._getLastPickedDateIndex() < 0) {\r\n                this.date(_newDate2);\r\n              }\r\n\r\n              this._setValue(_newDate2, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'decrementHours':\r\n          {\r\n            if (!lastPicked) {\r\n              break;\r\n            }\r\n\r\n            var _newDate3 = lastPicked.clone().subtract(1, 'h');\r\n\r\n            if (this._isValid(_newDate3, 'h')) {\r\n              if (this._getLastPickedDateIndex() < 0) {\r\n                this.date(_newDate3);\r\n              }\r\n\r\n              this._setValue(_newDate3, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'decrementMinutes':\r\n          {\r\n            if (!lastPicked) {\r\n              break;\r\n            }\r\n\r\n            var _newDate4 = lastPicked.clone().subtract(this._options.stepping, 'm');\r\n\r\n            if (this._isValid(_newDate4, 'm')) {\r\n              if (this._getLastPickedDateIndex() < 0) {\r\n                this.date(_newDate4);\r\n              }\r\n\r\n              this._setValue(_newDate4, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'decrementSeconds':\r\n          {\r\n            if (!lastPicked) {\r\n              break;\r\n            }\r\n\r\n            var _newDate5 = lastPicked.clone().subtract(1, 's');\r\n\r\n            if (this._isValid(_newDate5, 's')) {\r\n              if (this._getLastPickedDateIndex() < 0) {\r\n                this.date(_newDate5);\r\n              }\r\n\r\n              this._setValue(_newDate5, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'togglePeriod':\r\n          {\r\n            this._setValue(lastPicked.clone().add(lastPicked.hours() >= 12 ? -12 : 12, 'h'), this._getLastPickedDateIndex());\r\n\r\n            break;\r\n          }\r\n\r\n        case 'togglePicker':\r\n          {\r\n            var $this = $(e.target),\r\n                $link = $this.closest('a'),\r\n                $parent = $this.closest('ul'),\r\n                expanded = $parent.find('.show'),\r\n                closed = $parent.find('.collapse:not(.show)'),\r\n                $span = $this.is('span') ? $this : $this.find('span');\r\n            var collapseData, inactiveIcon, iconTest;\r\n\r\n            if (expanded && expanded.length) {\r\n              collapseData = expanded.data('collapse');\r\n\r\n              if (collapseData && collapseData.transitioning) {\r\n                return true;\r\n              }\r\n\r\n              if (expanded.collapse) {\r\n                // if collapse plugin is available through bootstrap.js then use it\r\n                expanded.collapse('hide');\r\n                closed.collapse('show');\r\n              } else {\r\n                // otherwise just toggle in class on the two views\r\n                expanded.removeClass('show');\r\n                closed.addClass('show');\r\n              }\r\n\r\n              if (this._useFeatherIcons()) {\r\n                $link.toggleClass(this._options.icons.time + ' ' + this._options.icons.date);\r\n                inactiveIcon = $link.hasClass(this._options.icons.time) ? this._options.icons.date : this._options.icons.time;\r\n                $link.html(this._iconTag(inactiveIcon));\r\n              } else {\r\n                $span.toggleClass(this._options.icons.time + ' ' + this._options.icons.date);\r\n              }\r\n\r\n              if (this._useFeatherIcons()) {\r\n                iconTest = $link.hasClass(this._options.icons.date);\r\n              } else {\r\n                iconTest = $span.hasClass(this._options.icons.date);\r\n              }\r\n\r\n              if (iconTest) {\r\n                $link.attr('title', this._options.tooltips.selectDate);\r\n              } else {\r\n                $link.attr('title', this._options.tooltips.selectTime);\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'showPicker':\r\n          this.widget.find('.timepicker > div:not(.timepicker-picker)').hide();\r\n          this.widget.find('.timepicker .timepicker-picker').show();\r\n          break;\r\n\r\n        case 'showHours':\r\n          this.widget.find('.timepicker .timepicker-picker').hide();\r\n          this.widget.find('.timepicker .timepicker-hours').show();\r\n          break;\r\n\r\n        case 'showMinutes':\r\n          this.widget.find('.timepicker .timepicker-picker').hide();\r\n          this.widget.find('.timepicker .timepicker-minutes').show();\r\n          break;\r\n\r\n        case 'showSeconds':\r\n          this.widget.find('.timepicker .timepicker-picker').hide();\r\n          this.widget.find('.timepicker .timepicker-seconds').show();\r\n          break;\r\n\r\n        case 'selectHour':\r\n          {\r\n            var hour = parseInt($(e.target).text(), 10);\r\n\r\n            if (!this.use24Hours) {\r\n              if (lastPicked.hours() >= 12) {\r\n                if (hour !== 12) {\r\n                  hour += 12;\r\n                }\r\n              } else {\r\n                if (hour === 12) {\r\n                  hour = 0;\r\n                }\r\n              }\r\n            }\r\n\r\n            this._setValue(lastPicked.clone().hours(hour), this._getLastPickedDateIndex());\r\n\r\n            if (!this._isEnabled('a') && !this._isEnabled('m') && !this._options.keepOpen && !this._options.inline) {\r\n              this.hide();\r\n            } else {\r\n              this._doAction(e, 'showPicker');\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        case 'selectMinute':\r\n          this._setValue(lastPicked.clone().minutes(parseInt($(e.target).text(), 10)), this._getLastPickedDateIndex());\r\n\r\n          if (!this._isEnabled('a') && !this._isEnabled('s') && !this._options.keepOpen && !this._options.inline) {\r\n            this.hide();\r\n          } else {\r\n            this._doAction(e, 'showPicker');\r\n          }\r\n\r\n          break;\r\n\r\n        case 'selectSecond':\r\n          this._setValue(lastPicked.clone().seconds(parseInt($(e.target).text(), 10)), this._getLastPickedDateIndex());\r\n\r\n          if (!this._isEnabled('a') && !this._options.keepOpen && !this._options.inline) {\r\n            this.hide();\r\n          } else {\r\n            this._doAction(e, 'showPicker');\r\n          }\r\n\r\n          break;\r\n\r\n        case 'clear':\r\n          this.clear();\r\n          break;\r\n\r\n        case 'close':\r\n          this.hide();\r\n          break;\r\n\r\n        case 'today':\r\n          {\r\n            var todaysDate = this.getMoment();\r\n\r\n            if (this._isValid(todaysDate, 'd')) {\r\n              this._setValue(todaysDate, this._getLastPickedDateIndex());\r\n            }\r\n\r\n            break;\r\n          }\r\n      }\r\n\r\n      return false;\r\n    } //public\r\n    ;\r\n\r\n    _proto2.hide = function hide() {\r\n      var transitioning = false;\r\n\r\n      if (!this.widget) {\r\n        return;\r\n      } // Ignore event if in the middle of a picker transition\r\n\r\n\r\n      this.widget.find('.collapse').each(function () {\r\n        var collapseData = $(this).data('collapse');\r\n\r\n        if (collapseData && collapseData.transitioning) {\r\n          transitioning = true;\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n      if (transitioning) {\r\n        return;\r\n      }\r\n\r\n      if (this.component && this.component.hasClass('btn')) {\r\n        this.component.toggleClass('active');\r\n      }\r\n\r\n      this.widget.hide();\r\n      $(window).off('resize', this._place);\r\n      this.widget.off('click', '[data-action]');\r\n      this.widget.off('mousedown', false);\r\n      this.widget.remove();\r\n      this.widget = false;\r\n\r\n      if (this.input !== undefined && this.input.val() !== undefined && this.input.val().trim().length !== 0) {\r\n        this._setValue(this._parseInputDate(this.input.val().trim(), {\r\n          isPickerShow: false\r\n        }), 0);\r\n      }\r\n\r\n      var lastPickedDate = this._getLastPickedDate();\r\n\r\n      this._notifyEvent({\r\n        type: DateTimePicker.Event.HIDE,\r\n        date: this.unset ? null : lastPickedDate ? lastPickedDate.clone() : void 0\r\n      });\r\n\r\n      if (this.input !== undefined) {\r\n        this.input.blur();\r\n      }\r\n\r\n      this._viewDate = lastPickedDate ? lastPickedDate.clone() : this.getMoment();\r\n    };\r\n\r\n    _proto2.show = function show() {\r\n      var currentMoment,\r\n          shouldUseCurrentIfUnset = false;\r\n      var useCurrentGranularity = {\r\n        'year': function year(m) {\r\n          return m.month(0).date(1).hours(0).seconds(0).minutes(0);\r\n        },\r\n        'month': function month(m) {\r\n          return m.date(1).hours(0).seconds(0).minutes(0);\r\n        },\r\n        'day': function day(m) {\r\n          return m.hours(0).seconds(0).minutes(0);\r\n        },\r\n        'hour': function hour(m) {\r\n          return m.seconds(0).minutes(0);\r\n        },\r\n        'minute': function minute(m) {\r\n          return m.seconds(0);\r\n        }\r\n      };\r\n\r\n      if (this.input !== undefined) {\r\n        if (this.input.prop('disabled') || !this._options.ignoreReadonly && this.input.prop('readonly') || this.widget) {\r\n          return;\r\n        }\r\n\r\n        if (this.input.val() !== undefined && this.input.val().trim().length !== 0) {\r\n          this._setValue(this._parseInputDate(this.input.val().trim(), {\r\n            isPickerShow: true\r\n          }), 0);\r\n        } else {\r\n          shouldUseCurrentIfUnset = true;\r\n        }\r\n      } else {\r\n        shouldUseCurrentIfUnset = true;\r\n      }\r\n\r\n      if (shouldUseCurrentIfUnset && this.unset && this._options.useCurrent) {\r\n        currentMoment = this.getMoment();\r\n\r\n        if (typeof this._options.useCurrent === 'string') {\r\n          currentMoment = useCurrentGranularity[this._options.useCurrent](currentMoment);\r\n        }\r\n\r\n        this._setValue(currentMoment, 0);\r\n      }\r\n\r\n      this.widget = this._getTemplate();\r\n\r\n      this._fillDow();\r\n\r\n      this._fillMonths();\r\n\r\n      this.widget.find('.timepicker-hours').hide();\r\n      this.widget.find('.timepicker-minutes').hide();\r\n      this.widget.find('.timepicker-seconds').hide();\r\n\r\n      this._update();\r\n\r\n      this._showMode();\r\n\r\n      $(window).on('resize', {\r\n        picker: this\r\n      }, this._place);\r\n      this.widget.on('click', '[data-action]', $.proxy(this._doAction, this)); // this handles clicks on the widget\r\n\r\n      this.widget.on('mousedown', false);\r\n\r\n      if (this.component && this.component.hasClass('btn')) {\r\n        this.component.toggleClass('active');\r\n      }\r\n\r\n      this._place();\r\n\r\n      this.widget.show();\r\n\r\n      if (this.input !== undefined && this._options.focusOnShow && !this.input.is(':focus')) {\r\n        this.input.focus();\r\n      }\r\n\r\n      this._notifyEvent({\r\n        type: DateTimePicker.Event.SHOW\r\n      });\r\n    };\r\n\r\n    _proto2.destroy = function destroy() {\r\n      this.hide(); //todo doc off?\r\n\r\n      this._element.removeData(DateTimePicker.DATA_KEY);\r\n\r\n      this._element.removeData('date');\r\n    };\r\n\r\n    _proto2.disable = function disable() {\r\n      this.hide();\r\n\r\n      if (this.component && this.component.hasClass('btn')) {\r\n        this.component.addClass('disabled');\r\n      }\r\n\r\n      if (this.input !== undefined) {\r\n        this.input.prop('disabled', true); //todo disable this/comp if input is null\r\n      }\r\n    };\r\n\r\n    _proto2.enable = function enable() {\r\n      if (this.component && this.component.hasClass('btn')) {\r\n        this.component.removeClass('disabled');\r\n      }\r\n\r\n      if (this.input !== undefined) {\r\n        this.input.prop('disabled', false); //todo enable comp/this if input is null\r\n      }\r\n    };\r\n\r\n    _proto2.toolbarPlacement = function toolbarPlacement(_toolbarPlacement) {\r\n      if (arguments.length === 0) {\r\n        return this._options.toolbarPlacement;\r\n      }\r\n\r\n      if (typeof _toolbarPlacement !== 'string') {\r\n        throw new TypeError('toolbarPlacement() expects a string parameter');\r\n      }\r\n\r\n      if (toolbarPlacements.indexOf(_toolbarPlacement) === -1) {\r\n        throw new TypeError(\"toolbarPlacement() parameter must be one of (\" + toolbarPlacements.join(', ') + \") value\");\r\n      }\r\n\r\n      this._options.toolbarPlacement = _toolbarPlacement;\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto2.widgetPositioning = function widgetPositioning(_widgetPositioning) {\r\n      if (arguments.length === 0) {\r\n        return $.extend({}, this._options.widgetPositioning);\r\n      }\r\n\r\n      if ({}.toString.call(_widgetPositioning) !== '[object Object]') {\r\n        throw new TypeError('widgetPositioning() expects an object variable');\r\n      }\r\n\r\n      if (_widgetPositioning.horizontal) {\r\n        if (typeof _widgetPositioning.horizontal !== 'string') {\r\n          throw new TypeError('widgetPositioning() horizontal variable must be a string');\r\n        }\r\n\r\n        _widgetPositioning.horizontal = _widgetPositioning.horizontal.toLowerCase();\r\n\r\n        if (horizontalModes.indexOf(_widgetPositioning.horizontal) === -1) {\r\n          throw new TypeError(\"widgetPositioning() expects horizontal parameter to be one of (\" + horizontalModes.join(', ') + \")\");\r\n        }\r\n\r\n        this._options.widgetPositioning.horizontal = _widgetPositioning.horizontal;\r\n      }\r\n\r\n      if (_widgetPositioning.vertical) {\r\n        if (typeof _widgetPositioning.vertical !== 'string') {\r\n          throw new TypeError('widgetPositioning() vertical variable must be a string');\r\n        }\r\n\r\n        _widgetPositioning.vertical = _widgetPositioning.vertical.toLowerCase();\r\n\r\n        if (verticalModes.indexOf(_widgetPositioning.vertical) === -1) {\r\n          throw new TypeError(\"widgetPositioning() expects vertical parameter to be one of (\" + verticalModes.join(', ') + \")\");\r\n        }\r\n\r\n        this._options.widgetPositioning.vertical = _widgetPositioning.vertical;\r\n      }\r\n\r\n      this._update();\r\n    };\r\n\r\n    _proto2.widgetParent = function widgetParent(_widgetParent) {\r\n      if (arguments.length === 0) {\r\n        return this._options.widgetParent;\r\n      }\r\n\r\n      if (typeof _widgetParent === 'string') {\r\n        _widgetParent = $(_widgetParent);\r\n      }\r\n\r\n      if (_widgetParent !== null && typeof _widgetParent !== 'string' && !(_widgetParent instanceof $)) {\r\n        throw new TypeError('widgetParent() expects a string or a jQuery object parameter');\r\n      }\r\n\r\n      this._options.widgetParent = _widgetParent;\r\n\r\n      if (this.widget) {\r\n        this.hide();\r\n        this.show();\r\n      }\r\n    };\r\n\r\n    _proto2.setMultiDate = function setMultiDate(multiDateArray) {\r\n      var dateFormat = this._options.format;\r\n      this.clear();\r\n\r\n      for (var index = 0; index < multiDateArray.length; index++) {\r\n        var date = moment(multiDateArray[index], dateFormat);\r\n\r\n        this._setValue(date, index);\r\n      }\r\n    } //static\r\n    ;\r\n\r\n    TempusDominusBootstrap4._jQueryHandleThis = function _jQueryHandleThis(me, option, argument) {\r\n      var data = $(me).data(DateTimePicker.DATA_KEY);\r\n\r\n      if (typeof option === 'object') {\r\n        $.extend({}, DateTimePicker.Default, option);\r\n      }\r\n\r\n      if (!data) {\r\n        data = new TempusDominusBootstrap4($(me), option);\r\n        $(me).data(DateTimePicker.DATA_KEY, data);\r\n      }\r\n\r\n      if (typeof option === 'string') {\r\n        if (data[option] === undefined) {\r\n          throw new Error(\"No method named \\\"\" + option + \"\\\"\");\r\n        }\r\n\r\n        if (argument === undefined) {\r\n          return data[option]();\r\n        } else {\r\n          if (option === 'date') {\r\n            data.isDateUpdateThroughDateOptionFromClientCode = true;\r\n          }\r\n\r\n          var ret = data[option](argument);\r\n          data.isDateUpdateThroughDateOptionFromClientCode = false;\r\n          return ret;\r\n        }\r\n      }\r\n    };\r\n\r\n    TempusDominusBootstrap4._jQueryInterface = function _jQueryInterface(option, argument) {\r\n      if (this.length === 1) {\r\n        return TempusDominusBootstrap4._jQueryHandleThis(this[0], option, argument);\r\n      }\r\n\r\n      return this.each(function () {\r\n        TempusDominusBootstrap4._jQueryHandleThis(this, option, argument);\r\n      });\r\n    };\r\n\r\n    return TempusDominusBootstrap4;\r\n  }(DateTimePicker);\r\n  /**\r\n  * ------------------------------------------------------------------------\r\n  * jQuery\r\n  * ------------------------------------------------------------------------\r\n  */\r\n\r\n\r\n  $(document).on(DateTimePicker.Event.CLICK_DATA_API, DateTimePicker.Selector.DATA_TOGGLE, function () {\r\n    var $originalTarget = $(this),\r\n        $target = getSelectorFromElement($originalTarget),\r\n        config = $target.data(DateTimePicker.DATA_KEY);\r\n\r\n    if ($target.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (config._options.allowInputToggle && $originalTarget.is('input[data-toggle=\"datetimepicker\"]')) {\r\n      return;\r\n    }\r\n\r\n    TempusDominusBootstrap4._jQueryInterface.call($target, 'toggle');\r\n  }).on(DateTimePicker.Event.CHANGE, \".\" + DateTimePicker.ClassName.INPUT, function (event) {\r\n    var $target = getSelectorFromElement($(this));\r\n\r\n    if ($target.length === 0 || event.isInit) {\r\n      return;\r\n    }\r\n\r\n    TempusDominusBootstrap4._jQueryInterface.call($target, '_change', event);\r\n  }).on(DateTimePicker.Event.BLUR, \".\" + DateTimePicker.ClassName.INPUT, function (event) {\r\n    var $target = getSelectorFromElement($(this)),\r\n        config = $target.data(DateTimePicker.DATA_KEY);\r\n\r\n    if ($target.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (config._options.debug || window.debug) {\r\n      return;\r\n    }\r\n\r\n    TempusDominusBootstrap4._jQueryInterface.call($target, 'hide', event);\r\n  }).on(DateTimePicker.Event.KEYDOWN, \".\" + DateTimePicker.ClassName.INPUT, function (event) {\r\n    var $target = getSelectorFromElement($(this));\r\n\r\n    if ($target.length === 0) {\r\n      return;\r\n    }\r\n\r\n    TempusDominusBootstrap4._jQueryInterface.call($target, '_keydown', event);\r\n  }).on(DateTimePicker.Event.KEYUP, \".\" + DateTimePicker.ClassName.INPUT, function (event) {\r\n    var $target = getSelectorFromElement($(this));\r\n\r\n    if ($target.length === 0) {\r\n      return;\r\n    }\r\n\r\n    TempusDominusBootstrap4._jQueryInterface.call($target, '_keyup', event);\r\n  }).on(DateTimePicker.Event.FOCUS, \".\" + DateTimePicker.ClassName.INPUT, function (event) {\r\n    var $target = getSelectorFromElement($(this)),\r\n        config = $target.data(DateTimePicker.DATA_KEY);\r\n\r\n    if ($target.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (!config._options.allowInputToggle) {\r\n      return;\r\n    }\r\n\r\n    TempusDominusBootstrap4._jQueryInterface.call($target, 'show', event);\r\n  });\r\n  $.fn[DateTimePicker.NAME] = TempusDominusBootstrap4._jQueryInterface;\r\n  $.fn[DateTimePicker.NAME].Constructor = TempusDominusBootstrap4;\r\n\r\n  $.fn[DateTimePicker.NAME].noConflict = function () {\r\n    $.fn[DateTimePicker.NAME] = JQUERY_NO_CONFLICT;\r\n    return TempusDominusBootstrap4._jQueryInterface;\r\n  };\r\n\r\n  return TempusDominusBootstrap4;\r\n}(jQuery);\r\n\r\n}();\r\n"],"names":[],"sourceRoot":""}